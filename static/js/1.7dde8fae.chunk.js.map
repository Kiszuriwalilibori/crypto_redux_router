{"version":3,"sources":["../node_modules/@material-ui/core/esm/utils/useForkRef.js","../node_modules/@material-ui/core/esm/utils/useEventCallback.js","../node_modules/@material-ui/core/esm/utils/setRef.js","../node_modules/@material-ui/core/esm/utils/createChainedFunction.js","../node_modules/@material-ui/core/esm/styles/useTheme.js","../node_modules/@material-ui/core/node_modules/react-transition-group/esm/TransitionGroupContext.js","../node_modules/@material-ui/core/esm/transitions/utils.js","../node_modules/@material-ui/core/esm/Portal/Portal.js","../node_modules/@material-ui/core/esm/Grow/Grow.js","../node_modules/@material-ui/core/node_modules/react-transition-group/esm/config.js","../node_modules/@material-ui/core/node_modules/react-transition-group/esm/Transition.js"],"names":["useForkRef","refA","refB","React","refValue","setRef","useEnhancedEffect","window","useEventCallback","fn","ref","current","apply","arguments","value","createChainedFunction","_len","length","funcs","Array","_key","reduce","acc","func","_len2","args","_key2","this","useTheme","useThemeWithoutDefault","defaultTheme","createContext","reflow","node","scrollTop","getTransitionProps","props","options","timeout","_props$style","style","duration","transitionDuration","mode","delay","transitionDelay","Portal","children","container","_props$disablePortal","disablePortal","onRendered","_React$useState","mountNode","setMountNode","handleRef","ReactDOM","getContainer","document","body","getScale","concat","Math","pow","styles","entering","opacity","transform","entered","Grow","_props$disableStrictM","disableStrictModeCompat","inProp","in","onEnter","onEntered","onEntering","onExit","onExited","onExiting","_props$timeout","_props$TransitionComp","TransitionComponent","Transition","other","_objectWithoutProperties","timer","autoTimeout","theme","enableStrictModeCompat","unstable_strictMode","nodeRef","foreignRef","undefined","normalizedTransitionCallback","callback","nodeOrAppearing","maybeAppearing","_ref","_ref2","_slicedToArray","isAppearing","handleEntering","handleEnter","_getTransitionProps","transitions","getAutoHeightDuration","clientHeight","transition","create","join","handleEntered","handleExiting","handleExit","_getTransitionProps2","handleExited","clearTimeout","_extends","appear","addEndListener","nodeOrNext","maybeNext","next","setTimeout","state","childProps","visibility","muiSupportAuto","_React$Component","context","_this","call","initialStatus","isMounting","enter","appearStatus","unmountOnExit","mountOnEnter","status","nextCallback","_inheritsLoose","getDerivedStateFromProps","prevState","_proto","prototype","componentDidMount","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","exit","mounting","performEnter","performExit","setState","_this2","appearing","findDOMNode","maybeNode","timeouts","enterTimeout","config","safeSetState","onTransitionEnd","_this3","cancel","nextState","setNextCallback","_this4","active","event","handler","doesNotHaveTimeoutOrListener","_ref3","maybeNextCallback","render","_this$props","_objectWithoutPropertiesLoose","createElement","TransitionGroupContext","Provider","cloneElement","Children","only","Component","noop","contextType","propTypes","defaultProps","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING"],"mappings":"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","file":"static/js/1.7dde8fae.chunk.js","sourcesContent":["import * as React from 'react';\nimport setRef from './setRef';\nexport default function useForkRef(refA, refB) {\n  /**\n   * This will create a new function if the ref props change and are defined.\n   * This means react will call the old forkRef with `null` and the new forkRef\n   * with the ref. Cleanup naturally emerges from this behavior\n   */\n  return React.useMemo(function () {\n    if (refA == null && refB == null) {\n      return null;\n    }\n\n    return function (refValue) {\n      setRef(refA, refValue);\n      setRef(refB, refValue);\n    };\n  }, [refA, refB]);\n}","import * as React from 'react';\nvar useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n/**\n * https://github.com/facebook/react/issues/14099#issuecomment-440013892\n *\n * @param {function} fn\n */\n\nexport default function useEventCallback(fn) {\n  var ref = React.useRef(fn);\n  useEnhancedEffect(function () {\n    ref.current = fn;\n  });\n  return React.useCallback(function () {\n    return (0, ref.current).apply(void 0, arguments);\n  }, []);\n}","// TODO v5: consider to make it private\nexport default function setRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nexport default function createChainedFunction() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  return funcs.reduce(function (acc, func) {\n    if (func == null) {\n      return acc;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof func !== 'function') {\n        console.error('Material-UI: Invalid Argument Type, must only provide functions, undefined, or null.');\n      }\n    }\n\n    return function chainedFunction() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      acc.apply(this, args);\n      func.apply(this, args);\n    };\n  }, function () {});\n}","import { useTheme as useThemeWithoutDefault } from '@material-ui/styles';\nimport React from 'react';\nimport defaultTheme from './defaultTheme';\nexport default function useTheme() {\n  var theme = useThemeWithoutDefault() || defaultTheme;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue(theme);\n  }\n\n  return theme;\n}","import React from 'react';\nexport default React.createContext(null);","export var reflow = function reflow(node) {\n  return node.scrollTop;\n};\nexport function getTransitionProps(props, options) {\n  var timeout = props.timeout,\n      _props$style = props.style,\n      style = _props$style === void 0 ? {} : _props$style;\n  return {\n    duration: style.transitionDuration || typeof timeout === 'number' ? timeout : timeout[options.mode] || 0,\n    delay: style.transitionDelay\n  };\n}","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { exactProp, HTMLElementType } from '@material-ui/utils';\nimport setRef from '../utils/setRef';\nimport useForkRef from '../utils/useForkRef';\n\nfunction getContainer(container) {\n  container = typeof container === 'function' ? container() : container; // #StrictMode ready\n\n  return ReactDOM.findDOMNode(container);\n}\n\nvar useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n/**\n * Portals provide a first-class way to render children into a DOM node\n * that exists outside the DOM hierarchy of the parent component.\n */\n\nvar Portal = /*#__PURE__*/React.forwardRef(function Portal(props, ref) {\n  var children = props.children,\n      container = props.container,\n      _props$disablePortal = props.disablePortal,\n      disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal,\n      onRendered = props.onRendered;\n\n  var _React$useState = React.useState(null),\n      mountNode = _React$useState[0],\n      setMountNode = _React$useState[1];\n\n  var handleRef = useForkRef( /*#__PURE__*/React.isValidElement(children) ? children.ref : null, ref);\n  useEnhancedEffect(function () {\n    if (!disablePortal) {\n      setMountNode(getContainer(container) || document.body);\n    }\n  }, [container, disablePortal]);\n  useEnhancedEffect(function () {\n    if (mountNode && !disablePortal) {\n      setRef(ref, mountNode);\n      return function () {\n        setRef(ref, null);\n      };\n    }\n\n    return undefined;\n  }, [ref, mountNode, disablePortal]);\n  useEnhancedEffect(function () {\n    if (onRendered && (mountNode || disablePortal)) {\n      onRendered();\n    }\n  }, [onRendered, mountNode, disablePortal]);\n\n  if (disablePortal) {\n    if ( /*#__PURE__*/React.isValidElement(children)) {\n      return /*#__PURE__*/React.cloneElement(children, {\n        ref: handleRef\n      });\n    }\n\n    return children;\n  }\n\n  return mountNode ? /*#__PURE__*/ReactDOM.createPortal(children, mountNode) : mountNode;\n});\nprocess.env.NODE_ENV !== \"production\" ? Portal.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The children to render into the `container`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A HTML element, component instance, or function that returns either.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.instanceOf(React.Component), PropTypes.func]),\n\n  /**\n   * Disable the portal behavior.\n   * The children stay within it's parent DOM hierarchy.\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * Callback fired once the children has been mounted into the `container`.\n   *\n   * This prop will be deprecated and removed in v5, the ref can be used instead.\n   */\n  onRendered: PropTypes.func\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  Portal['propTypes' + ''] = exactProp(Portal.propTypes);\n}\n\nexport default Portal;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Transition } from 'react-transition-group';\nimport useTheme from '../styles/useTheme';\nimport { reflow, getTransitionProps } from '../transitions/utils';\nimport useForkRef from '../utils/useForkRef';\n\nfunction getScale(value) {\n  return \"scale(\".concat(value, \", \").concat(Math.pow(value, 2), \")\");\n}\n\nvar styles = {\n  entering: {\n    opacity: 1,\n    transform: getScale(1)\n  },\n  entered: {\n    opacity: 1,\n    transform: 'none'\n  }\n};\n/**\n * The Grow transition is used by the [Tooltip](/components/tooltips/) and\n * [Popover](/components/popover/) components.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nvar Grow = /*#__PURE__*/React.forwardRef(function Grow(props, ref) {\n  var children = props.children,\n      _props$disableStrictM = props.disableStrictModeCompat,\n      disableStrictModeCompat = _props$disableStrictM === void 0 ? false : _props$disableStrictM,\n      inProp = props.in,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      style = props.style,\n      _props$timeout = props.timeout,\n      timeout = _props$timeout === void 0 ? 'auto' : _props$timeout,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Transition : _props$TransitionComp,\n      other = _objectWithoutProperties(props, [\"children\", \"disableStrictModeCompat\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"style\", \"timeout\", \"TransitionComponent\"]);\n\n  var timer = React.useRef();\n  var autoTimeout = React.useRef();\n  var theme = useTheme();\n  var enableStrictModeCompat = theme.unstable_strictMode && !disableStrictModeCompat;\n  var nodeRef = React.useRef(null);\n  var foreignRef = useForkRef(children.ref, ref);\n  var handleRef = useForkRef(enableStrictModeCompat ? nodeRef : undefined, foreignRef);\n\n  var normalizedTransitionCallback = function normalizedTransitionCallback(callback) {\n    return function (nodeOrAppearing, maybeAppearing) {\n      if (callback) {\n        var _ref = enableStrictModeCompat ? [nodeRef.current, nodeOrAppearing] : [nodeOrAppearing, maybeAppearing],\n            _ref2 = _slicedToArray(_ref, 2),\n            node = _ref2[0],\n            isAppearing = _ref2[1]; // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n\n\n        if (isAppearing === undefined) {\n          callback(node);\n        } else {\n          callback(node, isAppearing);\n        }\n      }\n    };\n  };\n\n  var handleEntering = normalizedTransitionCallback(onEntering);\n  var handleEnter = normalizedTransitionCallback(function (node, isAppearing) {\n    reflow(node); // So the animation always start from the start.\n\n    var _getTransitionProps = getTransitionProps({\n      style: style,\n      timeout: timeout\n    }, {\n      mode: 'enter'\n    }),\n        transitionDuration = _getTransitionProps.duration,\n        delay = _getTransitionProps.delay;\n\n    var duration;\n\n    if (timeout === 'auto') {\n      duration = theme.transitions.getAutoHeightDuration(node.clientHeight);\n      autoTimeout.current = duration;\n    } else {\n      duration = transitionDuration;\n    }\n\n    node.style.transition = [theme.transitions.create('opacity', {\n      duration: duration,\n      delay: delay\n    }), theme.transitions.create('transform', {\n      duration: duration * 0.666,\n      delay: delay\n    })].join(',');\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  var handleEntered = normalizedTransitionCallback(onEntered);\n  var handleExiting = normalizedTransitionCallback(onExiting);\n  var handleExit = normalizedTransitionCallback(function (node) {\n    var _getTransitionProps2 = getTransitionProps({\n      style: style,\n      timeout: timeout\n    }, {\n      mode: 'exit'\n    }),\n        transitionDuration = _getTransitionProps2.duration,\n        delay = _getTransitionProps2.delay;\n\n    var duration;\n\n    if (timeout === 'auto') {\n      duration = theme.transitions.getAutoHeightDuration(node.clientHeight);\n      autoTimeout.current = duration;\n    } else {\n      duration = transitionDuration;\n    }\n\n    node.style.transition = [theme.transitions.create('opacity', {\n      duration: duration,\n      delay: delay\n    }), theme.transitions.create('transform', {\n      duration: duration * 0.666,\n      delay: delay || duration * 0.333\n    })].join(',');\n    node.style.opacity = '0';\n    node.style.transform = getScale(0.75);\n\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  var handleExited = normalizedTransitionCallback(onExited);\n\n  var addEndListener = function addEndListener(nodeOrNext, maybeNext) {\n    var next = enableStrictModeCompat ? nodeOrNext : maybeNext;\n\n    if (timeout === 'auto') {\n      timer.current = setTimeout(next, autoTimeout.current || 0);\n    }\n  };\n\n  React.useEffect(function () {\n    return function () {\n      clearTimeout(timer.current);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: inProp,\n    nodeRef: enableStrictModeCompat ? nodeRef : undefined,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: addEndListener,\n    timeout: timeout === 'auto' ? null : timeout\n  }, other), function (state, childProps) {\n    return /*#__PURE__*/React.cloneElement(children, _extends({\n      style: _extends({\n        opacity: 0,\n        transform: getScale(0.75),\n        visibility: state === 'exited' && !inProp ? 'hidden' : undefined\n      }, styles[state], style, children.props.style),\n      ref: handleRef\n    }, childProps));\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Grow.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A single child content element.\n   */\n  children: PropTypes.element,\n\n  /**\n   * Enable this prop if you encounter 'Function components cannot be given refs',\n   * use `unstable_createStrictModeTheme`,\n   * and can't forward the ref in the child component.\n   */\n  disableStrictModeCompat: PropTypes.bool,\n\n  /**\n   * If `true`, show the component; triggers the enter or exit animation.\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   *\n   * Set to 'auto' to automatically calculate transition time based on height.\n   */\n  timeout: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nGrow.muiSupportAuto = true;\nexport default Grow;","export default {\n  disabled: false\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : PropTypes.instanceOf(Element)\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;"],"sourceRoot":""}