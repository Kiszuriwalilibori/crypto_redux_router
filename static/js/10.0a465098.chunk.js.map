{"version":3,"sources":["components/details.jsx","components/Choice/CryptoCurrencyChoice.jsx","js/FUNCTIONS/getListOfAvailableCryptos.js","components/Choice/SearchSection.jsx","components/Choice/FailedValidationAlert.jsx","components/Choice/BaseCurrencyChoice.jsx","components/LoadedCoinsMessage.jsx","js/FUNCTIONS/validateAndGetHistoricalData.js","js/FUNCTIONS/getCurrentCryptoPrice.js","js/FUNCTIONS/useDebounce.js"],"names":["Container","withStyles","root","margin","display","flexDirection","height","alignItems","background","paddingTop","Box","ContainerVerticallyCentered","justifyContent","CryptoCurrencyContainer","width","paddingRight","paddingLeft","marginRight","marginLeft","ColorCircularProgress","color","CircularProgress","_Spinner","React","thickness","size","Button","withRouter","styled","button","MyTooltip","theme","tooltip","backgroundColor","border","boxShadow","fontSize","Tooltip","createOption","ary","result","value","label","CryptoCurrencyChoice","connect","state","cryptos","list_of_all_cryptos","selectedCrypto","selected_crypto","dispatch","sendSelectedCrypto","data","send_selected_crypto","props","selectOptions","map","length","closeMenuOnSelect","className","placeholder","isClearable","isSearchable","onChange","selectValue","options","toPairs","require","extractListOfCryptos","obj","Data","item","hasOwnProperty","CoinName","Loop","StyledAlert","fontWeight","maxWidth","Alert","FailedValidationAlert","visible","validation_alert_visibility","message","severity","AlertTitle","MyFormControl","borderRadius","animation","padding","fontFamily","paddingBottom","FormControl","BaseCurrencyChoice","baseCurrency","base_currency","sendBaseCurrency","send_base_currency","component","FormLabel","RadioGroup","aria-label","name","event","target","FormControlLabel","control","Radio","MyAlert","LoadedCoinsMessage","open","isLoadedListOfAllCryptos","count","close","hide_loaded_coins_msg","Snackbar","autoHideDuration","onClose","variant","SearchSection","searchResults","search_results","clearSearchResults","clear_search_results","clearSelections","clear_selections","validateAndGetHistoricals","a","b","redirect","clear","getState","Axios","toggle_validation_alert_visibility","clear_historical","connecting","i","timestamps","reducedLength","push","get","link","historicalPrice","getValue","header","all","then","responseArr","forEach","index","partial","createObject","getKey","send_historical","new_selected_crypto","new_base_currency","search","set_search_results","catch","error","send_error","text","code","getListOfAvailableCryptos","x","err","response","send_list_of_all_cryptos","getCurrentCryptoPrice","y","z","cryptoID","referenceCoin","currentPrice","resp","Response","Object","keys","values","send_current","Message","clearLoop","clearInterval","history","useHistory","useMemo","not_found","returnGetCurrentPrice","callback","delay","debouncedValidate","useCallback","debounce","useEffect","setInterval","ID","onClick"],"mappings":"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","file":"static/js/10.0a465098.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nexport const Container = withStyles({\r\n  root: {\r\n    margin: \"0 auto\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    height: \"100vh\",\r\n    alignItems: \"center\",\r\n    background: \"transparent\",\r\n    paddingTop: \"10vh\",\r\n  },\r\n})(Box);\r\n\r\nexport const ContainerVerticallyCentered = withStyles({\r\n  root: {\r\n    justifyContent: \"center\",\r\n  },\r\n})(Container);\r\n\r\nexport const CryptoCurrencyContainer = withStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    paddingRight: \"15px\",\r\n    paddingLeft: \"15px\",\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n  },\r\n})(Box);\r\n\r\nconst ColorCircularProgress = withStyles({\r\n  root: {\r\n    color: \"rgba(122, 194, 33, 0.8);\",\r\n  },\r\n})(CircularProgress);\r\n\r\nconst _Spinner = React.memo(() => {\r\n  return (\r\n    <ContainerVerticallyCentered>\r\n      <ColorCircularProgress thickness={5} size={100} />\r\n    </ContainerVerticallyCentered>\r\n  );\r\n});\r\n\r\nexport const Spinner = withRouter(_Spinner);\r\n\r\nexport const Button = styled.button`\r\n    display:block;\r\n    animation: fade_in 1s ease-in-out forwards;\r\n    background-color: #759ae9;\r\n    background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0%, #759ae9), color-stop(50%, #376fe0), color-stop(50%, #1a5ad9), color-stop(100%, #2463de));\r\n    background-image: -webkit-linear-gradient(top, #759ae9 0%, #376fe0 50%, #1a5ad9 50%, #2463de 100%);\r\n    background-image: -moz-linear-gradient(top, #759ae9 0%, #376fe0 50%, #1a5ad9 50%, #2463de 100%);\r\n    background-image: -ms-linear-gradient(top, #759ae9 0%, #376fe0 50%, #1a5ad9 50%, #2463de 100%);\r\n    background-image: -o-linear-gradient(top, #759ae9 0%, #376fe0 50%, #1a5ad9 50%, #2463de 100%);\r\n    background-image: linear-gradient(top, #759ae9 0%, #376fe0 50%, #1a5ad9 50%, #2463de 100%);\r\n    border-top: 1px solid #1f58cc;\r\n    border-right: 1px solid #1b4db3;\r\n    border-bottom: 1px solid #174299;\r\n    border-left: 1px solid #1b4db3;\r\n    border-radius: 4px;\r\n    -webkit-box-shadow: inset 0 0 2px 0 rgba(57, 140, 255, 0.8);\r\n    box-shadow: inset 0 0 2px 0 rgba(57, 140, 255, 0.8);\r\n    color: #fff;\r\n//     font: bold 12px/1 \"helvetica neue\", helvetica, arial, sans-serif;\r\n    padding: 7px 0;\r\n    text-shadow: 0 -1px 1px #1a5ad9;\r\n    margin 2vh auto 1vh auto;\r\n    height: 40px;\r\n    font-size:1rem;\r\n    width: 150px; }\r\n    &:hover,&:focus {\r\n      background-color: #5d89e8;\r\n      background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0%, #5d89e8), color-stop(50%, #2261e0), color-stop(50%, #044bd9), color-stop(100%, #0d53de));\r\n      background-image: -webkit-linear-gradient(top, #5d89e8 0%, #2261e0 50%, #044bd9 50%, #0d53de 100%);\r\n      background-image: -moz-linear-gradient(top, #5d89e8 0%, #2261e0 50%, #044bd9 50%, #0d53de 100%);\r\n      background-image: -ms-linear-gradient(top, #5d89e8 0%, #2261e0 50%, #044bd9 50%, #0d53de 100%);\r\n      background-image: -o-linear-gradient(top, #5d89e8 0%, #2261e0 50%, #044bd9 50%, #0d53de 100%);\r\n      background-image: linear-gradient(top, #5d89e8 0%, #2261e0 50%, #044bd9 50%, #0d53de 100%);\r\n      cursor: pointer; }\r\n    &:active {\r\n      border-top: 1px solid #1b4db3;\r\n      border-right: 1px solid #174299;\r\n      border-bottom: 1px solid #133780;\r\n      border-left: 1px solid #174299;\r\n      \r\n      -webkit-box-shadow: inset 0 0 5px 2px #1a47a0, 0 1px 0 #eeeeee;\r\n      box-shadow: inset 0 0 5px 2px #1a47a0, 0 1px 0 #eeeeee; }\r\n    &:focus {outline:none;}\r\n  \r\n`;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst MyTooltip = withStyles(theme => ({\r\n    tooltip: {\r\n      backgroundColor: '#F5C200',\r\n      border: '1px solid #EE760A',\r\n      boxShadow: 'inset 0 0 5px #EE760A',\r\n      color: 'rgba(0, 0, 0, 0.87)',\r\n      fontSize: 11, \r\n    },\r\n  }))(Tooltip);\r\n\r\nexport default MyTooltip;","import * as React from 'react';\r\nimport {send_selected_crypto} from '../../js/ACTIONS/actions';\r\nimport \"react-virtualized-select/styles.css\";\r\nimport 'react-virtualized/styles.css'\r\nimport 'react-virtualized-select/styles.css'\r\nimport VirtualizedSelect from 'react-virtualized-select'\r\nimport {connect} from'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst createOption =(ary)=>{const result = {}; result.value = ary[0];result.label = ary[1]; return result;}\r\n\r\nconst prepareCryptoCurrencyChoice = (props)=>{\r\n    \r\n    const {cryptos, selectedCrypto, sendSelectedCrypto} = props;\r\n    const selectOptions = cryptos.map(createOption);\r\n    \r\n    return(\r\n\r\n        (cryptos && cryptos.length)?<VirtualizedSelect \r\n        \r\n        value ={selectedCrypto}\r\n        closeMenuOnSelect ={false}\r\n        className=\"selector-item virtualized\"\r\n        placeholder = \"Wybierz kryptowalutę\"\r\n        isClearable = {true}\r\n        isSearchable ={true}\r\n        onChange ={(selectValue)=>{sendSelectedCrypto(selectValue)}}\r\n        options = {selectOptions} />:null\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    cryptos: state.list_of_all_cryptos,\r\n    selectedCrypto: state.selected_crypto,\r\n\r\n  });\r\n\r\nconst  mapDispatchToProps = (dispatch) => ({\r\n    sendSelectedCrypto: (data) => dispatch(send_selected_crypto(data)),\r\n});\r\n\r\nconst CryptoCurrencyChoice = connect(mapStateToProps, mapDispatchToProps)(prepareCryptoCurrencyChoice);\r\nexport default CryptoCurrencyChoice;\r\n\r\n\r\nprepareCryptoCurrencyChoice.propTypes ={\r\n    cryptos:PropTypes.array,\r\n    selectedCrypto:PropTypes.object,\r\n    sendSelectedCrypto:PropTypes.func\r\n}","\r\nimport {send_error, send_list_of_all_cryptos, hide_loaded_coins_msg } from '../ACTIONS/actions';\r\n\r\nconst linkToListOfAllCryptos = 'https://min-api.cryptocompare.com/data/all/coinlist';\r\n\r\nvar toPairs = require('lodash/toPairs');\r\n\r\nconst extractListOfCryptos = (obj)=>{\r\n    let data = obj.data.Data; \r\n    for(var item in data){if (data.hasOwnProperty(item)){data[item] = (data[item]).CoinName;}}; \r\n    return toPairs(data);};\r\n  \r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\nexport default function getListOfAvailableCryptos(redirect) {\r\n  return async (dispatch, getState, Axios) => {\r\n   \r\n    const {isLoadedListOfAllCryptos} = getState();\r\n    if (!isLoadedListOfAllCryptos){\r\n      const response = await Axios.get(linkToListOfAllCryptos).catch((error) => {\r\n        const err = {\r\n          text: 'Podczas próby pobrania listy dostępnych kryptowalut wystąpił błąd',\r\n          code: error.message\r\n        };\r\n        dispatch(send_error(err));\r\n        redirect.error();\r\n      });\r\n    response && (dispatch(send_list_of_all_cryptos(extractListOfCryptos(response))));\r\n    } \r\n    else{dispatch(hide_loaded_coins_msg())}\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport CryptoCurrencyChoice from \"./CryptoCurrencyChoice\";\r\nimport { validate_and_get_historical_data } from \"../../js/FUNCTIONS/validateAndGetHistoricalData\";\r\nimport getListOfAvailableCryptos from \"../../js/FUNCTIONS/getListOfAvailableCryptos\";\r\nimport getCurrentCryptoPrice from \"../../js/FUNCTIONS/getCurrentCryptoPrice\";\r\nimport { Container, Button } from \"../details\";\r\nimport FailedValidationAlert from \"./FailedValidationAlert\";\r\nimport { useEffect } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\nimport { BaseCurrencyChoice } from \"./BaseCurrencyChoice\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport LoadedCoinsMessage from \"../LoadedCoinsMessage\";\r\nimport useDebounce from '../../js/FUNCTIONS/useDebounce';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {\r\n \r\n  clear_search_results, clear_selections,\r\n} from \"../../js/ACTIONS/actions\";\r\n\r\nvar Loop;\r\n\r\n//////////////////////////////////////////////////////////////////////////////\r\n\r\nconst UnconnectedSearchSection = (props) => {\r\n  const {\r\n    searchResults,\r\n    clearSearchResults,\r\n    clearSelections,\r\n    validateAndGetHistoricals,\r\n    getCurrentCryptoPrice,\r\n    getListOfAvailableCryptos,\r\n  } = props;\r\n\r\n  const clearLoop = () => {\r\n\r\n    clearSearchResults();\r\n    clearSelections();\r\n    clearInterval(Loop);\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n  const redirect = React.useMemo(\r\n    () => ({\r\n      not_found: () => {\r\n        history.push(\"/not_found\");\r\n      },\r\n      error: () => {\r\n        history.push(\"/error\");\r\n      },\r\n      data: () => {\r\n        history.push(\"/results\");\r\n      },\r\n      connecting: () => {\r\n        history.push(\"/connecting\");\r\n      },\r\n      search: () => {\r\n        history.push(\"/\");\r\n      },\r\n    }),\r\n    []\r\n  );\r\n\r\n  function returnGetCurrentPrice() {\r\n    return getCurrentCryptoPrice(searchResults, redirect, clearLoop);\r\n  }\r\n  \r\nconst debouncedValidate = useDebounce((()=>validateAndGetHistoricals(redirect, clearLoop)),500);\r\n\r\n\r\n  useEffect(() => {\r\n    if (searchResults && searchResults.length) {\r\n      redirect.connecting();\r\n      clearLoop();\r\n      returnGetCurrentPrice();\r\n      Loop = setInterval(returnGetCurrentPrice, 5000);\r\n    }\r\n  }, [searchResults]);\r\n\r\n  useEffect(() => {\r\n    getListOfAvailableCryptos(redirect);\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Button ID=\"Button\" onClick={debouncedValidate}>\r\n        Pokaż dane\r\n      </Button>\r\n      <BaseCurrencyChoice />\r\n      <CryptoCurrencyChoice />\r\n      <FailedValidationAlert />\r\n      <LoadedCoinsMessage />\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  \r\n  clearSearchResults: () => dispatch(clear_search_results()),\r\n  clearSelections: () => dispatch(clear_selections()),\r\n  validateAndGetHistoricals: (a, b) => dispatch(validate_and_get_historical_data(a, b)),\r\n  getListOfAvailableCryptos: (x) => dispatch(getListOfAvailableCryptos(x)),\r\n  getCurrentCryptoPrice: (x, y,z ) => dispatch(getCurrentCryptoPrice(x, y,z)),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  searchResults: state.search_results,\r\n});\r\n\r\nconst SearchSection = withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(UnconnectedSearchSection)\r\n);\r\nexport default SearchSection;\r\n\r\nUnconnectedSearchSection.propTypes = {\r\n  searchResults:PropTypes.array,\r\n  clearSearchResults:PropTypes.func,\r\n  validateAndGetHistoricalData:PropTypes.func,\r\n  getCurrentCryptoPrice:PropTypes.func,\r\n  getListOfAvailableCryptos:PropTypes.func\r\n}\r\n","import * as React from 'react';\r\nimport {connect} from'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst StyledAlert = withStyles({\r\n    root: {\r\n      background: '#FADC53',\r\n      color: '#f44336',\r\n      margin: '40px auto',\r\n      fontWeight: 'bold',\r\n      maxWidth: '300px',\r\n      boxShadow: 'inset 0 0 5px #1E1F26, 0 1px 2px rgba(0,0,0,0.07), 0 2px 4px rgba(0,0,0,0.07), 0 4px 8px rgba(0,0,0,0.07), 0 8px 16px rgba(0,0,0,0.07), 0 16px 32px rgba(0,0,0,0.07), 0 32px 64px rgba(0,0,0,0.07)',\r\n    },\r\n},)(Alert);\r\n \r\nconst prepareFailedValidationAlert = ({visible, message})=> {\r\n    \r\n  return (visible? <StyledAlert severity=\"error\"><AlertTitle>Uwaga!!!</AlertTitle>{message}</ StyledAlert>:null);\r\n}\r\n  \r\nlet mapStateToProps = (state) => ({  \r\n  visible: state.validation_alert_visibility,\r\n  message:'Nie wybrano waluty, kryptowaluty albo obu',\r\n});\r\n\r\nconst FailedValidationAlert = connect(mapStateToProps, null)(prepareFailedValidationAlert);\r\nexport default FailedValidationAlert;\r\n  \r\n\r\nprepareFailedValidationAlert.propTypes ={\r\n  visible: PropTypes.bool,\r\n  message: PropTypes.string\r\n}","import React from 'react';\r\nimport {connect} from'react-redux';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport {send_base_currency} from '../../js/ACTIONS/actions';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst MyFormControl = withStyles({\r\n  root: {\r\n    borderRadius: '2px',\r\n    animation: 'fade_in 1s ease-in-out forwards',\r\n    border: '2px solid #1E1F26',\r\n    padding: '20px',\r\n    width: '300px',\r\n    margin: '2vh 0',\r\n    boxShadow: 'inset 0 0 5px #1E1F26, 0 1px 2px rgba(0,0,0,0.07), 0 2px 4px rgba(0,0,0,0.07), 0 4px 8px rgba(0,0,0,0.07), 0 8px 16px rgba(0,0,0,0.07), 0 16px 32px rgba(0,0,0,0.07), 0 32px 64px rgba(0,0,0,0.07)',\r\n    backgroundColor: '#2C303A',\r\n    color: 'white',\r\n    '&:hover':{border: '2px solid #EE760A'}, \r\n    '& .MuiFormLabel-root':{color: 'white',fontFamily: '\"Lato\", sans-serif', paddingBottom: '5px' },\r\n    '& .MuiFormGroup-root':{flexDirection:'row', justifyContent:'space-around',},\r\n    '& .MuiRadio-colorSecondary.Mui-checked':{color: '#EE760A'},\r\n  },\r\n})(FormControl);\r\n\r\n\r\n  const prepareRadioButtonsGroup =(props)=> {\r\n  \r\n  const{baseCurrency, sendBaseCurrency} = props;\r\n  const handleChange = (event) => {sendBaseCurrency(event.target.value);};\r\n\r\n  return (\r\n    <MyFormControl component=\"fieldset\">\r\n      <FormLabel component=\"legend\">Waluta odniesienia</FormLabel>\r\n      <RadioGroup aria-label=\"currency\" name=\"currency\" value={baseCurrency} onChange={handleChange}>\r\n        <FormControlLabel value=\"PLN\" control={<Radio />} label=\"PLN\" />\r\n        <FormControlLabel value=\"USD\" control={<Radio />} label=\"USD\" />\r\n        <FormControlLabel value=\"EUR\" control={<Radio />} label=\"EUR\" />\r\n      </RadioGroup>\r\n    </MyFormControl>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({  \r\nbaseCurrency: state.base_currency,\r\n});\r\n\r\nconst  mapDispatchToProps = (dispatch) => ({\r\n  sendBaseCurrency: (data) => dispatch(send_base_currency(data)),\r\n});\r\n\r\nexport const BaseCurrencyChoice = connect(mapStateToProps, mapDispatchToProps)(prepareRadioButtonsGroup);\r\n\r\nprepareRadioButtonsGroup.propTypes ={\r\n  baseCurrency:PropTypes.string,\r\n  sendBaseCurrency:PropTypes.func\r\n  }","import * as React from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { hide_loaded_coins_msg } from \"../js/ACTIONS/actions\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst MyAlert = withStyles({\r\n  root: {\r\n    background: \"#688B69;\",\r\n    color: \"#F5F2AA\",\r\n    fontSize: \"1.25rem\",\r\n    border: \"1px solid 4d684d\",\r\n    boxShadow:\r\n      \"inset 0 0 5px #4d684d, 0 1px 2px rgba(0,0,0,0.07), 0 2px 4px rgba(0,0,0,0.07), 0 4px 8px rgba(0,0,0,0.07), 0 8px 16px rgba(0,0,0,0.07), 0 16px 32px rgba(0,0,0,0.07), 0 32px 64px rgba(0,0,0,0.07)\",\r\n  },\r\n})(Alert);\r\n\r\nexport const prepareLoadedCoinsMessage = (props) => {\r\n  const { open, close, count } = props;\r\n\r\n  return (\r\n    <Snackbar open={open} autoHideDuration={6000} onClose={close}>\r\n      <MyAlert severity=\"success\" variant=\"filled\">\r\n        Poprawnie pobrano tablicę z dostępnymi kryptowalutami.\r\n        <br />\r\n        Łącznie znaleziono dane dla {count} kryptowalut.\r\n        <br />\r\n      </MyAlert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  close: () => dispatch(hide_loaded_coins_msg()),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  open: state.isLoadedListOfAllCryptos,\r\n  count: [...state.list_of_all_cryptos].length,\r\n});\r\n\r\nconst LoadedCoinsMessage = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(prepareLoadedCoinsMessage);\r\n\r\nexport default LoadedCoinsMessage;\r\n\r\n\r\nprepareLoadedCoinsMessage.propTypes ={\r\n  open:PropTypes.bool,\r\n  count:PropTypes.number,\r\n  close:PropTypes.func\r\n}","import {\r\n  set_search_results,\r\n  toggle_validation_alert_visibility,\r\n  send_historical,\r\n  send_error,\r\n  clear_historical,\r\n} from \"../ACTIONS/actions\";\r\nimport { timestamps, link, createObject } from \"./functions\";\r\n\r\nexport function validate_and_get_historical_data(redirect, clear) {\r\n  return (dispatch, getState, Axios) => {\r\n    const { selected_crypto, base_currency } = getState();\r\n    if (selected_crypto && base_currency) {\r\n      dispatch(toggle_validation_alert_visibility(false));\r\n      dispatch(clear_historical());\r\n      redirect.connecting();\r\n      const ary = [];\r\n      for (let i = 0; i <= timestamps.reducedLength(); i++) {\r\n        ary.push(\r\n          Axios.get(\r\n            link.historicalPrice(\r\n              selected_crypto.value,\r\n              base_currency,\r\n              timestamps.getValue(i)\r\n            ),\r\n            link.header\r\n          )\r\n        );\r\n      }\r\n      const result = [];\r\n      Axios.all(ary)\r\n        .then((responseArr) => {\r\n          responseArr.forEach((item, index) => {\r\n            let partial = item.data[base_currency]\r\n              ? item.data[base_currency]\r\n              : \"n/a\";\r\n            result.push(createObject(timestamps.getKey(index), partial));\r\n          });\r\n          result.push(clear);\r\n          dispatch(send_historical(result));\r\n        \r\n          const new_selected_crypto = selected_crypto;\r\n          const new_base_currency = base_currency;\r\n          redirect.search();\r\n          dispatch(\r\n            set_search_results([\r\n              new_selected_crypto.value,\r\n              new_base_currency,\r\n              new_selected_crypto.label,\r\n            ])\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          \r\n          redirect.error();\r\n          dispatch(\r\n            send_error({\r\n              text:\r\n                \"Podczas pobierania historycznych danych dla \" +\r\n                selected_crypto.label +\r\n                \" wystąpił błąd:\",\r\n              code: error.message,\r\n            })\r\n          );\r\n        });\r\n    } else {\r\n      dispatch(toggle_validation_alert_visibility(true));\r\n    }\r\n  };\r\n}\r\n","import { send_error, send_current } from \"../ACTIONS/actions\";\r\n\r\nimport { link } from \"./functions\";\r\n\r\nexport default function getCurrentCryptoPrice(search_results, redirect, clear) {\r\n  return async (dispatch, getState, Axios) => {\r\n    const [cryptoID, referenceCoin, text] = search_results;\r\n    const resp = await Axios.get(\r\n      link.currentPrice(cryptoID, referenceCoin),\r\n      link.header\r\n    ).catch((error) => {\r\n     \r\n      redirect.error();\r\n      dispatch(\r\n        send_error({\r\n          text:\r\n            \"Podczas pobierania aktualnej wartości  dla \" +\r\n            cryptoID +\r\n            \"wystapił błąd:\",\r\n          code: error.message,\r\n        })\r\n      );\r\n\r\n      return;\r\n    });\r\n\r\n    if (resp && resp.data.Response !== \"Error\") {\r\n     \r\n      const data = [\r\n        Object.keys(resp.data)[0],\r\n        Object.values(resp.data)[0],\r\n        text,\r\n      ];\r\n      dispatch(send_current(data));\r\n      redirect.data();\r\n    } else {\r\n      redirect.error();\r\n      clear();\r\n      dispatch(\r\n        send_error({\r\n          text:\r\n            \"Aktualnie pobierana wartość dla \" +\r\n            cryptoID +\r\n            \" jest nieprawidłowa\",\r\n          code: resp.data.Message,\r\n        })\r\n      );\r\n    } \r\n  };\r\n}\r\n","import  { useCallback } from \"react\";\r\nimport debounce from \"lodash.debounce\";\r\n\r\nexport default function useDebounce(callback, delay) {\r\n  const debouncedFn = useCallback(\r\n    debounce((...args) => callback(...args), delay),\r\n    [delay]\r\n  );\r\n\r\n  return debouncedFn;\r\n}\r\n\r\n"],"sourceRoot":""}