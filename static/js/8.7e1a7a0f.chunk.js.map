{"version":3,"sources":["components/details.jsx","js/useDebounce.js","components/Choice/SearchSection.jsx","components/Choice/CryptoCurrencyChoice.jsx","components/Choice/FailedValidationAlert.jsx","components/Choice/BaseCurrencyChoice.jsx","components/LoadedCoinsMessage.jsx"],"names":["Container","withStyles","root","margin","display","flexDirection","height","alignItems","background","paddingTop","Box","ContainerVerticallyCentered","justifyContent","CryptoCurrencyContainer","width","paddingRight","paddingLeft","marginRight","marginLeft","ColorCircularProgress","color","CircularProgress","_Spinner","React","thickness","size","Button","withRouter","styled","button","MyTooltip","theme","tooltip","backgroundColor","border","boxShadow","fontSize","Tooltip","useDebounce","callback","delay","useCallback","debounce","Loop","createOption","ary","result","value","label","CryptoCurrencyChoice","connect","state","cryptos","listOfAllCryptos","selectedCrypto","dispatch","sendSelectedCrypto","data","props","selectOptions","map","length","closeMenuOnSelect","className","placeholder","isClearable","isSearchable","onChange","selectValue","options","StyledAlert","fontWeight","maxWidth","Alert","FailedValidationAlert","visible","isValidationAlertVisibile","message","severity","AlertTitle","MyFormControl","borderRadius","animation","padding","fontFamily","paddingBottom","FormControl","BaseCurrencyChoice","baseCurrency","sendBaseCurrency","component","FormLabel","RadioGroup","aria-label","name","event","target","FormControlLabel","control","Radio","MyAlert","LoadedCoinsMessage","open","isLoadedListOfAllCryptos","count","close","hideLoadedCoinMessage","Snackbar","autoHideDuration","onClose","variant","SearchSection","searchResults","clearSearchResults","clearSelections","validateAndGetHistoricals","a","b","validateAndGetHistoricalData","getListOfAvailableCryptos","x","getCurrentCryptoPrice","y","z","clearLoop","clearInterval","history","useHistory","redirect","useMemo","not_found","push","error","connecting","search","returnGetCurrentPrice","debouncedValidate","useEffect","setInterval","ID","onClick"],"mappings":"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","file":"static/js/8.7e1a7a0f.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nexport const Container = withStyles({\r\n  root: {\r\n    margin: \"0 auto\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    height: \"100vh\",\r\n    alignItems: \"center\",\r\n    background: \"transparent\",\r\n    paddingTop: \"10vh\",\r\n  },\r\n})(Box);\r\n\r\nexport const ContainerVerticallyCentered = withStyles({\r\n  root: {\r\n    justifyContent: \"center\",\r\n  },\r\n})(Container);\r\n\r\nexport const CryptoCurrencyContainer = withStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    paddingRight: \"15px\",\r\n    paddingLeft: \"15px\",\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n  },\r\n})(Box);\r\n\r\nconst ColorCircularProgress = withStyles({\r\n  root: {\r\n    color: \"rgba(122, 194, 33, 0.8);\",\r\n  },\r\n})(CircularProgress);\r\n\r\nconst _Spinner = React.memo(() => {\r\n  return (\r\n    <ContainerVerticallyCentered>\r\n      <ColorCircularProgress thickness={5} size={100} />\r\n    </ContainerVerticallyCentered>\r\n  );\r\n});\r\n\r\nexport const Spinner = withRouter(_Spinner);\r\n\r\nexport const Button = styled.button`\r\n    display:block;\r\n    animation: fade_in 1s ease-in-out forwards;\r\n    background-color: #759ae9;\r\n    background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0%, #759ae9), color-stop(50%, #376fe0), color-stop(50%, #1a5ad9), color-stop(100%, #2463de));\r\n    background-image: -webkit-linear-gradient(top, #759ae9 0%, #376fe0 50%, #1a5ad9 50%, #2463de 100%);\r\n    background-image: -moz-linear-gradient(top, #759ae9 0%, #376fe0 50%, #1a5ad9 50%, #2463de 100%);\r\n    background-image: -ms-linear-gradient(top, #759ae9 0%, #376fe0 50%, #1a5ad9 50%, #2463de 100%);\r\n    background-image: -o-linear-gradient(top, #759ae9 0%, #376fe0 50%, #1a5ad9 50%, #2463de 100%);\r\n    background-image: linear-gradient(top, #759ae9 0%, #376fe0 50%, #1a5ad9 50%, #2463de 100%);\r\n    border-top: 1px solid #1f58cc;\r\n    border-right: 1px solid #1b4db3;\r\n    border-bottom: 1px solid #174299;\r\n    border-left: 1px solid #1b4db3;\r\n    border-radius: 4px;\r\n    -webkit-box-shadow: inset 0 0 2px 0 rgba(57, 140, 255, 0.8);\r\n    box-shadow: inset 0 0 2px 0 rgba(57, 140, 255, 0.8);\r\n    color: #fff;\r\n//     font: bold 12px/1 \"helvetica neue\", helvetica, arial, sans-serif;\r\n    padding: 7px 0;\r\n    text-shadow: 0 -1px 1px #1a5ad9;\r\n    margin 2vh auto 1vh auto;\r\n    height: 40px;\r\n    font-size:1rem;\r\n    width: 150px; }\r\n    &:hover,&:focus {\r\n      background-color: #5d89e8;\r\n      background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0%, #5d89e8), color-stop(50%, #2261e0), color-stop(50%, #044bd9), color-stop(100%, #0d53de));\r\n      background-image: -webkit-linear-gradient(top, #5d89e8 0%, #2261e0 50%, #044bd9 50%, #0d53de 100%);\r\n      background-image: -moz-linear-gradient(top, #5d89e8 0%, #2261e0 50%, #044bd9 50%, #0d53de 100%);\r\n      background-image: -ms-linear-gradient(top, #5d89e8 0%, #2261e0 50%, #044bd9 50%, #0d53de 100%);\r\n      background-image: -o-linear-gradient(top, #5d89e8 0%, #2261e0 50%, #044bd9 50%, #0d53de 100%);\r\n      background-image: linear-gradient(top, #5d89e8 0%, #2261e0 50%, #044bd9 50%, #0d53de 100%);\r\n      cursor: pointer; }\r\n    &:active {\r\n      border-top: 1px solid #1b4db3;\r\n      border-right: 1px solid #174299;\r\n      border-bottom: 1px solid #133780;\r\n      border-left: 1px solid #174299;\r\n      \r\n      -webkit-box-shadow: inset 0 0 5px 2px #1a47a0, 0 1px 0 #eeeeee;\r\n      box-shadow: inset 0 0 5px 2px #1a47a0, 0 1px 0 #eeeeee; }\r\n    &:focus {outline:none;}\r\n  \r\n`;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst MyTooltip = withStyles(theme => ({\r\n    tooltip: {\r\n      backgroundColor: '#F5C200',\r\n      border: '1px solid #EE760A',\r\n      boxShadow: 'inset 0 0 5px #EE760A',\r\n      color: 'rgba(0, 0, 0, 0.87)',\r\n      fontSize: 11, \r\n    },\r\n  }))(Tooltip);\r\n\r\nexport default MyTooltip;","import  { useCallback } from \"react\";\r\nimport debounce from \"lodash.debounce\";\r\n\r\nexport default function useDebounce(callback, delay) {\r\n  const debouncedFn = useCallback(\r\n    debounce((...args) => callback(...args), delay),\r\n    [delay]\r\n  );\r\n\r\n  return debouncedFn;\r\n}\r\n\r\n","import React from \"react\";\r\nimport CryptoCurrencyChoice from \"./CryptoCurrencyChoice\";\r\nimport {getCurrentCryptoPrice, getListOfAvailableCryptos, validateAndGetHistoricalData} from \"../../redux/reducer&actions\";\r\nimport { Container, Button } from \"../details\";\r\nimport FailedValidationAlert from \"./FailedValidationAlert\";\r\nimport { useEffect } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\nimport { BaseCurrencyChoice } from \"./BaseCurrencyChoice\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport LoadedCoinsMessage from \"../LoadedCoinsMessage\";\r\nimport useDebounce from '../../js/useDebounce';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {\r\n \r\n  clearSearchResults, clearSelections,\r\n} from \"../../redux/reducer&actions\";\r\n\r\nvar Loop;\r\n\r\n//////////////////////////////////////////////////////////////////////////////\r\n\r\nconst UnconnectedSearchSection = (props) => {\r\n  const {\r\n    searchResults,\r\n    clearSearchResults,\r\n    clearSelections,\r\n    validateAndGetHistoricals,\r\n    getCurrentCryptoPrice,\r\n    getListOfAvailableCryptos,\r\n  } = props;\r\n\r\n  const clearLoop = () => {\r\n\r\n    clearSearchResults();\r\n    clearSelections();\r\n    clearInterval(Loop);\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n  const redirect = React.useMemo(\r\n    () => ({\r\n      not_found: () => {\r\n        history.push(\"/not_found\");\r\n      },\r\n      error: () => {\r\n        history.push(\"/error\");\r\n      },\r\n      data: () => {\r\n        history.push(\"/results\");\r\n      },\r\n      connecting: () => {\r\n        history.push(\"/connecting\");\r\n      },\r\n      search: () => {\r\n        history.push(\"/\");\r\n      },\r\n    }),\r\n    []\r\n  );\r\n\r\n  function returnGetCurrentPrice() {\r\n    return getCurrentCryptoPrice(searchResults, redirect, clearLoop);\r\n  }\r\n  \r\n  const debouncedValidate = useDebounce((()=>validateAndGetHistoricals(redirect, clearLoop)),500);\r\n\r\n  useEffect(() => {\r\n    if (searchResults && searchResults.length) {\r\n      redirect.connecting();\r\n      clearLoop();\r\n      returnGetCurrentPrice();\r\n      Loop = setInterval(returnGetCurrentPrice, 5000);\r\n    }\r\n  }, [searchResults]);\r\n\r\n  useEffect(() => {\r\n    getListOfAvailableCryptos(redirect);\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Button ID=\"Button\" onClick={debouncedValidate}>\r\n        Pokaż dane\r\n      </Button>\r\n      <BaseCurrencyChoice />\r\n      <CryptoCurrencyChoice />\r\n      <FailedValidationAlert />\r\n      <LoadedCoinsMessage />\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  \r\n  clearSearchResults: () => dispatch(clearSearchResults()),\r\n  clearSelections: () => dispatch(clearSelections()),\r\n  validateAndGetHistoricals: (a, b) => dispatch(validateAndGetHistoricalData(a, b)),\r\n  getListOfAvailableCryptos: (x) => dispatch(getListOfAvailableCryptos(x)),\r\n  getCurrentCryptoPrice: (x, y,z ) => dispatch(getCurrentCryptoPrice(x, y,z)),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  searchResults: state.searchResults,\r\n});\r\n\r\nconst SearchSection = withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(UnconnectedSearchSection)\r\n);\r\nexport default SearchSection;\r\n\r\nUnconnectedSearchSection.propTypes = {\r\n  searchResults:PropTypes.array,\r\n  clearSearchResults:PropTypes.func,\r\n  validateAndGetHistoricalData:PropTypes.func,\r\n  getCurrentCryptoPrice:PropTypes.func,\r\n  getListOfAvailableCryptos:PropTypes.func\r\n}\r\n","import * as React from 'react';\r\n//import {sendSelectedCrypto} from '../../js/ACTIONS/actions';\r\nimport {sendSelectedCrypto} from '../../redux/reducer&actions';\r\nimport \"react-virtualized-select/styles.css\";\r\nimport 'react-virtualized/styles.css'\r\nimport 'react-virtualized-select/styles.css'\r\nimport VirtualizedSelect from 'react-virtualized-select'\r\nimport {connect} from'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst createOption =(ary)=>{const result = {}; result.value = ary[0];result.label = ary[1]; return result;}\r\n\r\nconst prepareCryptoCurrencyChoice = (props)=>{\r\n    \r\n    const {cryptos, selectedCrypto, sendSelectedCrypto} = props;\r\n    const selectOptions = cryptos.map(createOption);\r\n    \r\n    return(\r\n\r\n        (cryptos && cryptos.length)?<VirtualizedSelect \r\n        \r\n        value ={selectedCrypto}\r\n        closeMenuOnSelect ={false}\r\n        className=\"selector-item virtualized\"\r\n        placeholder = \"Wybierz kryptowalutę\"\r\n        isClearable = {true}\r\n        isSearchable ={true}\r\n        onChange ={(selectValue)=>{sendSelectedCrypto(selectValue)}}\r\n        options = {selectOptions} />:null\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    cryptos: state.listOfAllCryptos,\r\n    selectedCrypto: state.selectedCrypto,\r\n\r\n  });\r\n\r\nconst  mapDispatchToProps = (dispatch) => ({\r\n    sendSelectedCrypto: (data) => dispatch(sendSelectedCrypto(data)),\r\n});\r\n\r\nconst CryptoCurrencyChoice = connect(mapStateToProps, mapDispatchToProps)(prepareCryptoCurrencyChoice);\r\nexport default CryptoCurrencyChoice;\r\n\r\n\r\nprepareCryptoCurrencyChoice.propTypes ={\r\n    cryptos:PropTypes.array,\r\n    selectedCrypto:PropTypes.object,\r\n    sendSelectedCrypto:PropTypes.func\r\n}","import * as React from 'react';\r\nimport {connect} from'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst StyledAlert = withStyles({\r\n    root: {\r\n      background: '#FADC53',\r\n      color: '#f44336',\r\n      margin: '40px auto',\r\n      fontWeight: 'bold',\r\n      maxWidth: '300px',\r\n      boxShadow: 'inset 0 0 5px #1E1F26, 0 1px 2px rgba(0,0,0,0.07), 0 2px 4px rgba(0,0,0,0.07), 0 4px 8px rgba(0,0,0,0.07), 0 8px 16px rgba(0,0,0,0.07), 0 16px 32px rgba(0,0,0,0.07), 0 32px 64px rgba(0,0,0,0.07)',\r\n    },\r\n},)(Alert);\r\n \r\nconst prepareFailedValidationAlert = ({visible, message})=> {\r\n    \r\n  return (visible? <StyledAlert severity=\"error\"><AlertTitle>Uwaga!!!</AlertTitle>{message}</ StyledAlert>:null);\r\n}\r\n  \r\nlet mapStateToProps = (state) => ({  \r\n  visible: state.isValidationAlertVisibile,\r\n  message:'Nie wybrano waluty, kryptowaluty albo obu',\r\n});\r\n\r\nconst FailedValidationAlert = connect(mapStateToProps, null)(prepareFailedValidationAlert);\r\nexport default FailedValidationAlert;\r\n  \r\nprepareFailedValidationAlert.propTypes ={\r\n  visible: PropTypes.bool,\r\n  message: PropTypes.string\r\n}","import React from 'react';\r\nimport {connect} from'react-redux';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n//import {sendBaseCurrency} from '../../js/ACTIONS/actions';\r\nimport {sendBaseCurrency} from '../../redux/reducer&actions';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst MyFormControl = withStyles({\r\n  root: {\r\n    borderRadius: '2px',\r\n    animation: 'fade_in 1s ease-in-out forwards',\r\n    border: '2px solid #1E1F26',\r\n    padding: '20px',\r\n    width: '300px',\r\n    margin: '2vh 0',\r\n    boxShadow: 'inset 0 0 5px #1E1F26, 0 1px 2px rgba(0,0,0,0.07), 0 2px 4px rgba(0,0,0,0.07), 0 4px 8px rgba(0,0,0,0.07), 0 8px 16px rgba(0,0,0,0.07), 0 16px 32px rgba(0,0,0,0.07), 0 32px 64px rgba(0,0,0,0.07)',\r\n    backgroundColor: '#2C303A',\r\n    color: 'white',\r\n    '&:hover':{border: '2px solid #EE760A'}, \r\n    '& .MuiFormLabel-root':{color: 'white',fontFamily: '\"Lato\", sans-serif', paddingBottom: '5px' },\r\n    '& .MuiFormGroup-root':{flexDirection:'row', justifyContent:'space-around',},\r\n    '& .MuiRadio-colorSecondary.Mui-checked':{color: '#EE760A'},\r\n  },\r\n})(FormControl);\r\n\r\n\r\n  const prepareRadioButtonsGroup =(props)=> {\r\n  const{baseCurrency, sendBaseCurrency} = props;\r\n  const handleChange = (event) => {sendBaseCurrency(event.target.value);};\r\n\r\n  return (\r\n    <MyFormControl component=\"fieldset\">\r\n      <FormLabel component=\"legend\">Waluta odniesienia</FormLabel>\r\n      <RadioGroup aria-label=\"currency\" name=\"currency\" value={baseCurrency} onChange={handleChange}>\r\n        <FormControlLabel value=\"PLN\" control={<Radio />} label=\"PLN\" />\r\n        <FormControlLabel value=\"USD\" control={<Radio />} label=\"USD\" />\r\n        <FormControlLabel value=\"EUR\" control={<Radio />} label=\"EUR\" />\r\n      </RadioGroup>\r\n    </MyFormControl>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({  \r\nbaseCurrency: state.baseCurrency,\r\n});\r\n\r\nconst  mapDispatchToProps = (dispatch) => ({\r\n  sendBaseCurrency: (data) => dispatch(sendBaseCurrency(data)),\r\n});\r\n\r\nexport const BaseCurrencyChoice = connect(mapStateToProps, mapDispatchToProps)(prepareRadioButtonsGroup);\r\n\r\nprepareRadioButtonsGroup.propTypes ={\r\n  baseCurrency:PropTypes.string,\r\n  sendBaseCurrency:PropTypes.func\r\n  }","import * as React from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { hideLoadedCoinMessage } from \"../redux/reducer&actions\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst MyAlert = withStyles({\r\n  root: {\r\n    background: \"#688B69;\",\r\n    color: \"#F5F2AA\",\r\n    fontSize: \"1.25rem\",\r\n    border: \"1px solid 4d684d\",\r\n    boxShadow:\r\n      \"inset 0 0 5px #4d684d, 0 1px 2px rgba(0,0,0,0.07), 0 2px 4px rgba(0,0,0,0.07), 0 4px 8px rgba(0,0,0,0.07), 0 8px 16px rgba(0,0,0,0.07), 0 16px 32px rgba(0,0,0,0.07), 0 32px 64px rgba(0,0,0,0.07)\",\r\n  },\r\n})(Alert);\r\n\r\nexport const prepareLoadedCoinsMessage = (props) => {\r\n  const { open, close, count } = props;\r\n\r\n  return (\r\n    <Snackbar open={open} autoHideDuration={6000} onClose={close}>\r\n      <MyAlert severity=\"success\" variant=\"filled\">\r\n        Poprawnie pobrano tablicę z dostępnymi kryptowalutami.\r\n        <br />\r\n        Łącznie znaleziono dane dla {count} kryptowalut.\r\n        <br />\r\n      </MyAlert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  close: () => dispatch(hideLoadedCoinMessage()),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  open: state.isLoadedListOfAllCryptos,\r\n  count: [...state.listOfAllCryptos].length,\r\n});\r\n\r\nconst LoadedCoinsMessage = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(prepareLoadedCoinsMessage);\r\n\r\nexport default LoadedCoinsMessage;\r\n\r\n\r\nprepareLoadedCoinsMessage.propTypes ={\r\n  open:PropTypes.bool,\r\n  count:PropTypes.number,\r\n  close:PropTypes.func\r\n}"],"sourceRoot":""}