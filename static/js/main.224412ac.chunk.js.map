{"version":3,"sources":["graphics/background.jpg","actions.js","complexfunctions/cryptodata.js","reducer.js","components/emptyloader.js","App.js","serviceWorker.js","styles/globals.js","index.js","functions.js"],"names":["module","exports","SEND_LIST_OF_ALL_CRYPTOS","SEND_ERROR","SEND_HISTORICAL","SEND_CURRENT","HIDE_LOADED_COINS_MSG","TOGGLE_VALIDATION_ALERT_VISIBILITY","CLEAR_HISTORICAL","SEND_BASE_CURRENCY","SEND_SELECTED_CRYPTO","SET_SEARCH_RESULTS","CLEAR_SEARCH_RESULTS","send_list_of_all_cryptos","data","type","payload","send_error","send_base_currency","send_selected_crypto","clear_search_results","send_historical","clear_historical","send_current","set_search_results","hide_loaded_coins_msg","toggle_validation_alert_visibility","CryptoData","complement","newData","push","format","text","referenceCoin","x","formatResult","currentPrice","getPercentChange","this","Object","values","initialState","list_of_all_cryptos","list_of_all_cryptos_is_loaded","list_of_all_cryptos_length","error","alert_visible","alert_message","choice","currentCryptoName","currentCryptoValue","content","historical_data_received","base_currency","selected_crypto","search_results","reducer","state","action","actions","length","validation_alert_visibility","clear","pop","historical","cryptoData","createObject","link","currentPriceText","getData","first_content","shift","currentCryptoID","EmptyLoader","DisplayData","lazy","Error","Search","Spinner","App","basename","process","exact","path","fallback","Boolean","window","location","hostname","match","createGlobalStyle","background","store","createStore","applyMiddleware","thunk","withExtraArgument","Axios","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message","toPairs","require","timestamps","getUnixTime","endOfYesterday","subMonths","Date","startOfYear","reducedLength","getValue","i","getKey","current","arguments","result","change","change_string","toLocaleString","useGrouping","minimumFractionDigits","maximumFractionDigits","extractCoinList","obj","Data","item","hasOwnProperty","CoinName","coin","reference","header","Apikey","historicalPrice","timestamp","output","testValue","callback","map","element","keys","key","value","toString","pair"],"mappings":"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","file":"static/js/main.224412ac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.0424d5f5.jpg\";","export const SEND_LIST_OF_ALL_CRYPTOS ='SEND_LIST_OF_ALL_CRYPTOS';\r\nexport const SEND_ERROR ='SEND_ERROR';\r\nexport const TRIGGER_ALERT ='TRIGGER_ALERT';\r\nexport const SEND_HISTORICAL ='SEND_HISTORICAL';\r\nexport const SEND_CURRENT ='SEND_CURRENT';\r\nexport const HIDE_LOADED_COINS_MSG ='HIDE_LOADED_COINS_MSG';\r\nexport const TOGGLE_VALIDATION_ALERT_VISIBILITY ='TOGGLE_VALIDATION_ALERT_VISIBILITY';\r\nexport const CLEAR_HISTORICAL ='CLEAR_HISTORICAL';\r\nexport const SEND_BASE_CURRENCY ='SEND CURRENCY';\r\nexport const SEND_SELECTED_CRYPTO ='SEND_SELECTED_CRYPTO';\r\nexport const SET_SEARCH_RESULTS ='SET_SEARCH_RESULTS';\r\nexport const CLEAR_SEARCH_RESULTS = 'CLEAR_SEARCH_RESULTS';\r\n\r\nexport function send_list_of_all_cryptos(data){\r\n\r\n    return {\r\n        type: SEND_LIST_OF_ALL_CRYPTOS,\r\n        payload: data,\r\n    };  \r\n}\r\n\r\nexport function send_error(data){\r\n\r\n    return {\r\n        type: SEND_ERROR,\r\n        payload: data,\r\n    };  \r\n}\r\n\r\n\r\nexport function send_base_currency(data){\r\n\r\n    return {\r\n        type: SEND_BASE_CURRENCY,\r\n        payload: data,\r\n    };  \r\n}\r\n\r\nexport function send_selected_crypto(data){\r\n\r\n    return {\r\n        type: SEND_SELECTED_CRYPTO,\r\n        payload: data,\r\n    };  \r\n}\r\n\r\nexport function validate (x){return (dispatch, getState)=>{ \r\n    \r\n        const { selected_crypto, base_currency } = getState();\r\n        //console.log('selected crypto ',selected_crypto, 'base_currency ',base_currency);\r\n        if(selected_crypto && base_currency){console.log('validated'); \r\n            dispatch(toggle_validation_alert_visibility(false));\r\n            dispatch(set_search_results([selected_crypto.value, base_currency, selected_crypto.label]));\r\n           // console.log(x);\r\n            } \r\n        else{\r\n            //console.log('not validated');\r\n            dispatch(toggle_validation_alert_visibility(true))} \r\n        }\r\n    }\r\n    \r\n\r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function clear_search_results(){\r\n    return{type: CLEAR_SEARCH_RESULTS}\r\n}\r\n\r\nexport function send_historical(data){\r\n\r\n    return {\r\n        type: SEND_HISTORICAL,\r\n        payload: data,\r\n    };  \r\n}\r\n\r\nexport function clear_historical(){\r\n\r\n    return {\r\n        type: CLEAR_HISTORICAL, \r\n    };  \r\n}\r\n\r\n\r\nexport function send_current(data){\r\n\r\n    return {\r\n        type: SEND_CURRENT,\r\n        payload: data,\r\n    };  \r\n}\r\n\r\nexport function set_search_results(data){\r\n    return {\r\n        type: SET_SEARCH_RESULTS,\r\n        payload: data,\r\n    }; \r\n}\r\n\r\nexport function hide_loaded_coins_msg(){\r\n\r\n    return {\r\n        type: HIDE_LOADED_COINS_MSG,\r\n    };  \r\n}\r\n\r\n\r\nexport function toggle_validation_alert_visibility(data){\r\n\r\n    return {\r\n        type: TOGGLE_VALIDATION_ALERT_VISIBILITY,\r\n        payload: data,\r\n    };\r\n}","import {formatResult, getPercentChange} from '../functions';\r\n\r\n\r\n\r\nconst CryptoData = class {\r\n\r\n    constructor (data){\r\n    this.data = [data];\r\n    this.currentPrice = Object.values(data)[0];\r\n    }\r\n  \r\n    \r\n    complement = (newData)=>{\r\n      this.data.push(...newData);\r\n    }\r\n  \r\n    format =(text, referenceCoin)=>{ \r\n      const x = formatResult(\r\n        this.data, \r\n        text, \r\n        this.currentPrice, \r\n        getPercentChange, \r\n        referenceCoin);\r\n      this.data = x;\r\n  \r\n      \r\n      }\r\n  \r\n      get getData (){return this.data};\r\n  \r\n  }\r\n  \r\n  export default CryptoData;","import * as actions from './actions';\r\nimport CryptoData from './complexfunctions/cryptodata';\r\nimport {link,createObject} from './functions';\r\nconst initialState = {\r\n    list_of_all_cryptos:[],\r\n    list_of_all_cryptos_is_loaded:false,\r\n    list_of_all_cryptos_length:0,\r\n    error: null,\r\n    alert_visible: false,\r\n    alert_message: '',\r\n    choice: '',\r\n    currentCryptoName:null,\r\n    currentCryptoValue:null,\r\n    content: [],\r\n    historical_data_received:false,\r\n    base_currency:null,\r\n    selected_crypto:null,\r\n    search_results:[],\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        \r\n        case actions.SEND_LIST_OF_ALL_CRYPTOS:\r\n           \r\n            return{\r\n                ...state, list_of_all_cryptos: action.payload, list_of_all_cryptos_is_loaded: true, list_of_all_cryptos_length: action.payload.length,\r\n            }\r\n        case actions.TOGGLE_VALIDATION_ALERT_VISIBILITY:\r\n                     \r\n            return{\r\n                ...state, validation_alert_visibility: action.payload\r\n            }\r\n        \r\n        case actions.SEND_BASE_CURRENCY:\r\n       \r\n            return{\r\n                ...state, base_currency: action.payload,\r\n            } \r\n        case actions.SEND_SELECTED_CRYPTO:\r\n         \r\n            return{\r\n                ...state, selected_crypto: action.payload,\r\n            } \r\n\r\n        case actions.SET_SEARCH_RESULTS:\r\n        \r\n            return{\r\n                ...state, search_results: [...action.payload],\r\n            } \r\n\r\n        case actions.CLEAR_SEARCH_RESULTS:\r\n         \r\n            return{\r\n                ...state, search_results: null,\r\n            } \r\n\r\n\r\n        case actions.SEND_ERROR:\r\n            \r\n            return{\r\n                ...state, error: action.payload,\r\n            } \r\n        case actions.HIDE_LOADED_COINS_MSG:\r\n        \r\n            return{\r\n                ...state, list_of_all_cryptos_is_loaded: action.payload,\r\n            } \r\n        case actions.SEND_HISTORICAL:\r\n           const clear = action.payload.pop();\r\n            return{\r\n                ...state, historical: action.payload, clear: clear, historical_data_received: true,\r\n            }   \r\n\r\n        case actions.CLEAR_HISTORICAL:\r\n            return{\r\n                ...state, historical_data_received:false, historical: null,\r\n            }\r\n\r\n        case actions.SEND_CURRENT:\r\n\r\n            if (state.currentCryptoValue === null || state.currentCryptoValue != action.payload[1]){\r\n               \r\n                const cryptoData = new CryptoData(createObject(link.currentPriceText, action.payload[1]));\r\n                \r\n                cryptoData.complement([...state.historical]);\r\n                \r\n                cryptoData.format(link.currentPriceText, action.payload[0]);\r\n                \r\n                const content = cryptoData.getData;\r\n                const first_content = content.shift(); \r\n\r\n                    return{\r\n                        ...state, currentCryptoValue: action.payload[1], \r\n                        currentCryptoID: action.payload[0],\r\n                        content: content, \r\n                        currentCryptoName:action.payload[2], \r\n                        first_content: first_content,\r\n                    }   \r\n            }\r\n\r\n\r\n            \r\n        default:\r\n        return state;\r\n    }\r\n}\r\n\r\nexport default reducer;\r\n","\r\nconst EmptyLoader = () => null;\r\nexport default EmptyLoader;","import * as React from 'react';\nimport {lazy, Suspense } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n// import {Spinner} from './components/details';\n// import {Search} from './components/search';\n// import {Error} from './components/error';\nimport EmptyLoader from './components/emptyloader';\n\nconst DisplayData = lazy(() => import('./components/data'));\nconst Error = lazy(()=>import('./components/error'));\nconst Search = lazy(()=>import('./components/search'));\nconst Spinner = lazy(()=>import('./components/spinner'));\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL} >\n    <Switch>\n      <Route exact  path = \"/\">\n        <Suspense fallback={EmptyLoader()}>\n          <Search />\n        </Suspense>\n      </Route>\n      <Route path = \"/results\">\n        <Suspense fallback={EmptyLoader()}>\n          <DisplayData /> \n        </Suspense>  \n      </Route>\n      <Route path = \"/connecting\">\n        <Suspense fallback={EmptyLoader()}> \n          <Spinner />\n        </Suspense>   \n      </Route>\n      <Route path = \"/error\">\n        <Suspense fallback={EmptyLoader()}> \n          <Error />\n        </Suspense>\n      </Route>\n    </Switch>\n</Router> \n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createGlobalStyle } from 'styled-components';\r\nimport background from '../graphics/background.jpg';\r\nconst GlobalStyle = createGlobalStyle`\r\n\r\n\r\nbody {\r\n    overflow-y: scroll;\r\n    margin: 0;\r\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n    sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  }\r\n\r\n  #root{min-height: 100vh; \r\n    display:flex; \r\n    align-items: center;\r\n    flex-direction: column;\r\n    background-image: url(${background}); \r\n    background-size: cover; \r\n    background-repeat: no-repeat;\r\n    color:white;\r\n    & *{box-sizing: border-box;}\r\n  }\r\n  \r\n  @keyframes fade_in {\r\n    0%   {opacity: 0;}\r\n    70%  {opacity: 0;}\r\n    100% {opacity: 1;}\r\n  }\r\n\r\n.selector-item__coin {\r\n    color: #1A86DB;\r\n    width:300px;\r\n    margin-bottom: 8px;\r\n    background-color:white; \r\n    border-radius: 2px; \r\n    border: 2px solid #1A86DB;\r\n    display: flex; \r\n    align-items: center; \r\n    justify-content: space-around; \r\n    padding: 7px 2px; }\r\n \r\n .selector-item {width: 300px;}\r\n     \r\n .virtualized {\r\n   background-color: #2C303A;\r\n   animation: fade_in 1s ease-in-out forwards;\r\n   box-shadow: inset 0 0 5px #1E1F26 , 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\r\n   color: white;\r\n   padding: 20px;\r\n   font-size:1rem;\r\n   border: 2px solid #1E1F26;\r\n   border-radius: 2px;\r\n   margin: 2vh 0;\r\n   cursor:pointer;\r\n   &:hover{border: 2px solid #EE760A;} \r\n \r\n   & .Select-placeholder{color: white; margin-bottom:15px; font-family: 'Lato', sans-serif; };\r\n   \r\n   & input {\r\n     width: 90%;\r\n     margin: 0 auto;\r\n     display: block;\r\n     border: 1px solid white;\r\n     border-radius:1px;\r\n     background:transparent;\r\n     color: $mycolor;\r\n     font-size: 1rem;\r\n     padding: 0 2px;\r\n     box-shadow: inset 0px 0px 2px 1px rgba(255,255,255,0.54);\r\n   };\r\n   & .Select-menu-outer span:hover{background-color: white;  }\r\n }\r\n \r\n\r\n\r\n\r\n\r\n .DataContainer {///aktualny\r\n    margin: 0 auto;\r\n    height: 110px;\r\n    width: 100%;\r\n    max-width:1200px;\r\n    position:relative;\r\n    padding-top: 15px;\r\n    padding-bottom:15px;\r\n    margin-top:5px;\r\n    margin-bottom:5px;\r\n    background-color: transparent;\r\n    background:mintcream;\r\n    border-top: 2px solid  #4B7DE6;\r\n    border-right: 2px solid  #4B7DE6;\r\n    border-bottom: 2px solid  #4B7DE6;\r\n    color:#726B68 ;\r\n    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\r\n    display: flex;\r\n    justify-content: space-between;\r\n    border-radius: 0.25rem;\r\n    align-items: center;\r\n    \r\n  \r\n    @include mobile {\r\n        height: 245px;\r\n        width: 100%;\r\n    }\r\n   \r\n  \r\n  }\r\n  \r\n  .DataContainer::before {\r\n    min-width: 110px;\r\n    content: 'ALTCOINS';\r\n  \r\n    @include mobile {\r\n        min-width: 246px;\r\n    }\r\n    height: 20px;\r\n    background-color: #2692C3;\r\n    background-color:#4B7DE6;\r\n    border-radius: 0.25rem 0.25rem 0 0;\r\n    display:flex;\r\n    flex-direction:column;\r\n    justify-content: center;\r\n    align-items:center;\r\n    position:absolute;\r\n    left: -45px;\r\n    @include mobile {\r\n        left: -112.5px;\r\n    }\r\n    color: white;\r\n    font-size: 10px;\r\n    transform: rotate(270deg);\r\n  }\r\n    \r\n  @media (max-width:1000px) {\r\n  .DataContainer{ \r\n    border:none;\r\n    flex-direction: column;\r\n    height:unset;\r\n    border-radius: 0 0 0.25rem 0.25rem;\r\n  };  \r\n    .DataContainer::before {\r\n      width: inherit;\r\n      left: 0;\r\n      top: -20px;\r\n      transform:none;\r\n    }\r\n  }\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n`\r\n\r\nexport default GlobalStyle;","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport reducer from './reducer';\nimport Axios from 'axios';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport GlobalStyle from './styles/globals';\nimport './styles/styles.css';\n\nexport const store = createStore(reducer, applyMiddleware(thunk.withExtraArgument(Axios)));\n\nReactDOM.render(\n<Provider store={store}>\n    {/* <GlobalStyle />  */}\n    <App />\n</Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n","import subMonths from 'date-fns/subMonths';\nimport getUnixTime from 'date-fns/getUnixTime';\nimport endOfYesterday from 'date-fns/endOfYesterday';\nimport startOfYear from 'date-fns/startOfYear';\nvar toPairs = require('lodash/toPairs');\n\n//źle - pokazuje jedenastą sylwestra\n\n\nexport const timestamps ={\ncontent:[\n  ['1D',()=> getUnixTime(endOfYesterday())],\n  ['1M',()=> getUnixTime(subMonths(new Date(), 1))],\n  ['5M',()=> getUnixTime(subMonths(new Date(), 3))],\n  ['12M',()=> getUnixTime(subMonths(new Date(), 12))],\n  ['30M',()=> getUnixTime(subMonths(new Date(), 30))],\n  ['YTD',()=> getUnixTime(startOfYear(new Date()))],\n],\nreducedLength: function(){return this.content.length -1;},\ngetValue: function(i){return (this.content[i][1])();},\ngetKey: function(i){return this.content[i][0]},\n}\n\nexport function getPercentChange (current, historical){\n\nif (arguments[0] && arguments[1] && (typeof arguments[1] === 'number') && (typeof arguments[0] === 'number')){\nlet result;\n\nlet change = 100*(current-historical)/historical;\nconst change_string = change.toLocaleString('pl-PL',{ \n    useGrouping:'true', \n    minimumFractionDigits:\"2\", \n    maximumFractionDigits:'2',\n\n  });\n \n  if (change === 0) result = 'no change';\n  else if (change > 0) result = `+${change_string}%`;\n  else if (change < 0) result = `${change_string}%`;\nreturn result;\n}\nelse return 'n/a';\n}\n\nexport const link ={\n\nextractCoinList: (obj)=>{let data = obj.data.Data; \nfor(var item in data){if (data.hasOwnProperty(item)){data[item] = (data[item]).CoinName;}}; return toPairs(data);},\ncurrentPrice:(coin, reference)=>\"https://min-api.cryptocompare.com/data/price?fsym=\"+coin+\"&tsyms=\"+reference,\nheader: { Apikey: 'feca5a4838bd3042b5340fb60de7c44aadd2d20a178514c44947c3736be3558e' },\nhistoricalPrice:(coin,reference,timestamp)=>'https://min-api.cryptocompare.com/data/dayAvg?fsym='+coin+'&tsym='+reference+'&toTs='+timestamp+'&avgType=MidHighLow&tryConversion=true&extraParams=your_app_name',\ncurrentPriceText: 'Aktualna Cena',\n}\n\nexport function formatResult(output, testValue, current, callback, referenceCoin) {\n\n  const result = output.map(element => {\n    if (Object.keys(element)[0] !== testValue) {\n      const key = Object.keys(element)[0];\n      let value = Object.values(element)[0];\n      element = createObject(key, callback(current, value));\n\n      return element;\n    } else {\n      \n      const value = current.toString()+ ' '+ referenceCoin;\n      element =createObject(testValue, value);\n      return element;\n    }\n  });\n  \n  return result;\n}\n\nexport const Counter = class {\n  constructor(){this.counter = 0;} \n  increase(){this.counter +=1 };\n  notGreater(x){return (this.counter <=x)};\n  get get(){return this.counter;}; \n  }\n\nexport function createObject  (key, value){\n  const pair ={};\n  pair[key] = value;\n  return pair;\n}\n\nexport const linkToListOfAllCryptos = 'https://min-api.cryptocompare.com/data/all/coinlist';\n\n\nexport const createOption =(ary)=>{const result = {}; result.value = ary[0];result.label = ary[1]; return result;}\n\nexport const extractListOfCryptos = (obj)=>{let data = obj.data.Data; \n  for(var item in data){if (data.hasOwnProperty(item)){data[item] = (data[item]).CoinName;}}; return toPairs(data);};\n\nexport const addCurrencySymbol = function (price, symbol){const x = (Object.values(price)[0]).toString() +\" \"+ symbol; Object.values(price)[0] = x;}\n\n\n\nexport const CryptoData = class {\n\n  constructor (data){\n  this.data = [data];\n  this.currentPrice = Object.values(data)[0];\n  }\n\n  \n  complement = (newData)=>{\n    this.data.push(...newData);\n  }\n\n  format =(text, referenceCoin)=>{ \n    const x = formatResult(\n      this.data, \n      text, \n      this.currentPrice, \n      getPercentChange, \n      referenceCoin);\n    this.data = x;\n\n    \n    }\n\n    get getData (){return this.data};\n\n}\n\nexport const EnquiryForNewerPriceResponse = class {\n\n  constructor (content){\n    this.content = content;\n   }\n\n  isValid =()=>this.content.hasOwnProperty('data') && Object.getOwnPropertyNames(this.content.data).length === 1;\n  receivedNewerPrice =(oldPrice)=>{return(oldPrice !== Object.values(this.content.data)[0])? true: false};\n  get getNewestPrice () {return Object.values(this.content.data)[0]};\n\n}"],"sourceRoot":""}