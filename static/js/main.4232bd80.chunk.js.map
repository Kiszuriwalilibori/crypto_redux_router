{"version":3,"sources":["js/ACTIONS/actions.js","js/FUNCTIONS/CryptoCurrencyData.js","js/REDUCERS/reducer.js","components/EmptyLoader.jsx","components/App.jsx","js/serviceWorker.js","index.js","js/FUNCTIONS/functions.js"],"names":["SEND_LIST_OF_ALL_CRYPTOS","SEND_ERROR","SEND_HISTORICAL","SEND_CURRENT","HIDE_LOADED_COINS_MSG","TOGGLE_VALIDATION_ALERT_VISIBILITY","CLEAR_HISTORICAL","SEND_BASE_CURRENCY","SEND_SELECTED_CRYPTO","SET_SEARCH_RESULTS","CLEAR_SEARCH_RESULTS","send_list_of_all_cryptos","data","type","payload","send_error","send_base_currency","send_selected_crypto","clear_search_results","send_historical","clear_historical","send_current","set_search_results","hide_loaded_coins_msg","toggle_validation_alert_visibility","CryptoCurrencyData","complement","newData","push","format","text","referenceCoin","x","formatResult","currentPrice","getPercentChange","this","Object","values","initialState","list_of_all_cryptos","isLoadedListOfAllCryptos","lenghtOfListOfAllCryptos","error","alert_visible","alert_message","choice","currentCryptoName","currentCryptoValue","content","isHistoricalDataReceived","base_currency","selected_crypto","search_results","reducer","state","action","actions","length","validation_alert_visibility","clear","pop","historical","cryptoData","createObject","link","currentPriceText","getData","first_content","shift","currentCryptoID","EmptyLoader","Results","lazy","Error","SearchSection","Loader","App","basename","process","exact","path","fallback","Boolean","window","location","hostname","match","store","createStore","applyMiddleware","thunk","withExtraArgument","Axios","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message","toPairs","require","timestamps","getUnixTime","endOfYesterday","subMonths","Date","startOfYear","reducedLength","getValue","i","getKey","current","arguments","result","change","change_string","toLocaleString","useGrouping","minimumFractionDigits","maximumFractionDigits","extractCoinList","obj","Data","item","hasOwnProperty","CoinName","coin","reference","header","Apikey","historicalPrice","timestamp","output","testValue","callback","map","element","keys","key","value","toString","pair"],"mappings":"uKAAA,4uBAAO,IAAMA,EAA0B,2BAC1BC,EAAY,aAEZC,EAAiB,kBACjBC,EAAc,eACdC,EAAuB,wBACvBC,EAAoC,qCACpCC,EAAkB,mBAClBC,EAAoB,gBACpBC,EAAsB,uBACtBC,EAAoB,qBACpBC,EAAuB,uBAE7B,SAASC,EAAyBC,GAErC,MAAO,CACHC,KAAMb,EACNc,QAASF,GAIV,SAASG,EAAWH,GAEvB,MAAO,CACHC,KAAMZ,EACNa,QAASF,GAKV,SAASI,EAAmBJ,GAE/B,MAAO,CACHC,KAAMN,EACNO,QAASF,GAIV,SAASK,EAAqBL,GAEjC,MAAO,CACHC,KAAML,EACNM,QAASF,GAiCV,SAASM,IACZ,MAAM,CAACL,KAAMH,GAGV,SAASS,EAAgBP,GAE5B,MAAO,CACHC,KAAMX,EACNY,QAASF,GAIV,SAASQ,IAEZ,MAAO,CACHP,KAAMP,GAKP,SAASe,EAAaT,GAEzB,MAAO,CACHC,KAAMV,EACNW,QAASF,GAIV,SAASU,EAAmBV,GAC/B,MAAO,CACHC,KAAMJ,EACNK,QAASF,GAIV,SAASW,IAEZ,MAAO,CACHV,KAAMT,GAKP,SAASoB,EAAmCZ,GAE/C,MAAO,CACHC,KAAMR,EACNS,QAASF,K,iOC9FFa,EA1BS,WACtB,WAAYb,GAAO,IAAD,gCAKlBc,WAAa,SAACC,GAAa,IAAD,GACxB,IAAKf,MAAKgB,KAAV,oBAAkBD,KANF,KASlBE,OAAS,SAACC,EAAMC,GACd,IAAMC,EAAIC,YACR,EAAKrB,KACLkB,EACA,EAAKI,aACLC,IACAJ,GAEF,EAAKnB,KAAOoB,GAhBZI,KAAKxB,KAAO,CAACA,GACbwB,KAAKF,aAAeG,OAAOC,OAAO1B,GAAM,GAHpB,oDAsBpB,OAAOwB,KAAKxB,SAtBQ,KCClB2B,EAAe,CACnBC,oBAAqB,GACrBC,0BAA0B,EAC1BC,yBAA0B,EAC1BC,MAAO,KACPC,eAAe,EACfC,cAAe,GACfC,OAAQ,GACRC,kBAAmB,KACnBC,mBAAoB,KACpBC,QAAS,GACTC,0BAA0B,EAC1BC,cAAe,KACfC,gBAAiB,KACjBC,eAAgB,IAiGHC,EA9FC,WAAmC,IAAlCC,EAAiC,uDAAzBhB,EAAciB,EAAW,uCAChD,OAAQA,EAAO3C,MACb,KAAK4C,IACH,OAAO,eACFF,EADL,CAEEf,oBAAqBgB,EAAO1C,QAC5B2B,0BAA0B,EAC1BC,yBAA0Bc,EAAO1C,QAAQ4C,SAE7C,KAAKD,IACH,OAAO,eACFF,EADL,CAEEI,4BAA6BH,EAAO1C,UAGxC,KAAK2C,IACH,OAAO,eACFF,EADL,CAEEJ,cAAeK,EAAO1C,UAE1B,KAAK2C,IACH,OAAO,eACFF,EADL,CAEEH,gBAAiBI,EAAO1C,UAG5B,KAAK2C,IACH,OAAO,eACFF,EADL,CAEEF,eAAe,YAAKG,EAAO1C,WAG/B,KAAK2C,IACH,OAAO,eACFF,EADL,CAEEF,eAAgB,OAGpB,KAAKI,IACH,OAAO,eACFF,EADL,CAEEZ,MAAOa,EAAO1C,UAElB,KAAK2C,IACH,OAAO,eACFF,EADL,CAEEd,yBAA0Be,EAAO1C,UAErC,KAAK2C,IACH,IAAMG,EAAQJ,EAAO1C,QAAQ+C,MAC7B,OAAO,eACFN,EADL,CAEEO,WAAYN,EAAO1C,QACnB8C,MAAOA,EACPV,0BAA0B,IAG9B,KAAKO,IACH,OAAO,eACFF,EADL,CAEEL,0BAA0B,EAC1BY,WAAY,OAGhB,KAAKL,IACH,GAC+B,OAA7BF,EAAMP,oBACNO,EAAMP,oBAAsBQ,EAAO1C,QAAQ,GAC3C,CACA,IAAMiD,EAAa,IAAItC,EACrBuC,YAAaC,IAAKC,iBAAkBV,EAAO1C,QAAQ,KAGrDiD,EAAWrC,WAAX,YAA0B6B,EAAMO,aAEhCC,EAAWlC,OAAOoC,IAAKC,iBAAkBV,EAAO1C,QAAQ,IAExD,IAAMmC,EAAUc,EAAWI,QACrBC,EAAgBnB,EAAQoB,QAE9B,OAAO,eACFd,EADL,CAEEP,mBAAoBQ,EAAO1C,QAAQ,GACnCwD,gBAAiBd,EAAO1C,QAAQ,GAChCmC,QAASA,EACTF,kBAAmBS,EAAO1C,QAAQ,GAClCsD,cAAeA,IAGrB,QACE,OAAOb,I,mCC5GEgB,EADK,kBAAM,MCIpBC,EAAUC,gBAAK,kBAAM,8DACrBC,EAAQD,gBAAK,kBAAM,+DACnBE,EAAgBF,gBAAK,kBAAM,qEAC3BG,EAASH,gBAAK,kBAAM,uDA+BXI,MA7Bf,WACE,OACE,gBAAC,IAAD,CAAQC,SAAUC,wBAChB,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,KAChB,gBAAC,WAAD,CAAUC,SAAUX,KAClB,gBAACI,EAAD,QAGJ,gBAAC,IAAD,CAAOM,KAAK,YACV,gBAAC,WAAD,CAAUC,SAAUX,KAClB,gBAACC,EAAD,QAGJ,gBAAC,IAAD,CAAOS,KAAK,eACV,gBAAC,WAAD,CAAUC,SAAUX,KAClB,gBAACK,EAAD,QAGJ,gBAAC,IAAD,CAAOK,KAAK,UACV,gBAAC,WAAD,CAAUC,SAAUX,KAClB,gBAACG,EAAD,WCnBQS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,WCLOC,EAAQC,YACnBnC,EACAoC,YAAgBC,IAAMC,kBAAkBC,OAG1CC,IAASC,OACP,kBAAC,IAAD,CAAUP,MAAOA,GACf,kBAAC,EAAD,OAEFQ,SAASC,eAAe,SD6GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA7D,GACL8D,QAAQ9D,MAAMA,EAAM+D,a,wQErIxBC,EAAUC,EAAQ,KAITC,EAAY,CACzB5D,QAAQ,CACN,CAAC,KAAK,kBAAK6D,YAAYC,iBACvB,CAAC,KAAK,kBAAKD,YAAYE,YAAU,IAAIC,KAAQ,MAC7C,CAAC,KAAK,kBAAKH,YAAYE,YAAU,IAAIC,KAAQ,MAC7C,CAAC,MAAM,kBAAKH,YAAYE,YAAU,IAAIC,KAAQ,OAC9C,CAAC,MAAM,kBAAKH,YAAYE,YAAU,IAAIC,KAAQ,OAC9C,CAAC,MAAM,kBAAKH,YAAYI,YAAY,IAAID,UAE1CE,cAAe,WAAW,OAAO/E,KAAKa,QAAQS,OAAQ,GACtD0D,SAAU,SAASC,GAAG,OAAQjF,KAAKa,QAAQoE,GAAG,MAC9CC,OAAQ,SAASD,GAAG,OAAOjF,KAAKa,QAAQoE,GAAG,KAGpC,SAASlF,EAAkBoF,EAASzD,GAE3C,GAAI0D,UAAU,IAAMA,UAAU,IAA+B,kBAAjBA,UAAU,IAA6C,kBAAjBA,UAAU,GAAiB,CAC7G,IAAIC,EAEAC,EAAS,KAAKH,EAAQzD,GAAYA,EAChC6D,EAAgBD,EAAOE,eAAe,QAAQ,CAChDC,YAAY,OACZC,sBAAsB,IACtBC,sBAAsB,MAO1B,OAHiB,IAAXL,EAAcD,EAAS,YAClBC,EAAS,EAAGD,EAAM,WAAOE,EAAP,KAClBD,EAAS,IAAGD,EAAM,UAAME,EAAN,MACtBF,EAEF,MAAO,MAGL,IAAMxD,EAAM,CAEnB+D,gBAAiB,SAACC,GAAO,IAAIrH,EAAOqH,EAAIrH,KAAKsH,KAC7C,IAAI,IAAIC,KAAQvH,EAAUA,EAAKwH,eAAeD,KAAOvH,EAAKuH,GAASvH,EAAKuH,GAAOE,UAAa,OAAO1B,EAAQ/F,IAC3GsB,aAAa,SAACoG,EAAMC,GAAP,MAAmB,qDAAqDD,EAAK,UAAUC,GACpGC,OAAQ,CAAEC,OAAQ,oEAClBC,gBAAgB,SAACJ,EAAKC,EAAUI,GAAhB,MAA4B,sDAAsDL,EAAK,SAASC,EAAU,SAASI,EAAU,oEAC7IzE,iBAAkB,iBAGX,SAASjC,EAAa2G,EAAQC,EAAWtB,EAASuB,EAAU/G,GAiBjE,OAfe6G,EAAOG,KAAI,SAAAC,GACxB,GAAI3G,OAAO4G,KAAKD,GAAS,KAAOH,EAAW,CACzC,IAAMK,EAAM7G,OAAO4G,KAAKD,GAAS,GAC7BG,EAAQ9G,OAAOC,OAAO0G,GAAS,GAGnC,OAFAA,EAAUhF,EAAakF,EAAKJ,EAASvB,EAAS4B,IAK9C,IAAMA,EAAQ5B,EAAQ6B,WAAY,IAAKrH,EAEvC,OADAiH,EAAShF,EAAa6E,EAAWM,MAehC,SAASnF,EAAekF,EAAKC,GAClC,IAAME,EAAM,GAEZ,OADAA,EAAKH,GAAOC,EACLE,K","file":"static/js/main.4232bd80.chunk.js","sourcesContent":["export const SEND_LIST_OF_ALL_CRYPTOS ='SEND_LIST_OF_ALL_CRYPTOS';\r\nexport const SEND_ERROR ='SEND_ERROR';\r\nexport const TRIGGER_ALERT ='TRIGGER_ALERT';\r\nexport const SEND_HISTORICAL ='SEND_HISTORICAL';\r\nexport const SEND_CURRENT ='SEND_CURRENT';\r\nexport const HIDE_LOADED_COINS_MSG ='HIDE_LOADED_COINS_MSG';\r\nexport const TOGGLE_VALIDATION_ALERT_VISIBILITY ='TOGGLE_VALIDATION_ALERT_VISIBILITY';\r\nexport const CLEAR_HISTORICAL ='CLEAR_HISTORICAL';\r\nexport const SEND_BASE_CURRENCY ='SEND CURRENCY';\r\nexport const SEND_SELECTED_CRYPTO ='SEND_SELECTED_CRYPTO';\r\nexport const SET_SEARCH_RESULTS ='SET_SEARCH_RESULTS';\r\nexport const CLEAR_SEARCH_RESULTS = 'CLEAR_SEARCH_RESULTS';\r\n\r\nexport function send_list_of_all_cryptos(data){\r\n\r\n    return {\r\n        type: SEND_LIST_OF_ALL_CRYPTOS,\r\n        payload: data,\r\n    };  \r\n}\r\n\r\nexport function send_error(data){\r\n\r\n    return {\r\n        type: SEND_ERROR,\r\n        payload: data,\r\n    };  \r\n}\r\n\r\n\r\nexport function send_base_currency(data){\r\n\r\n    return {\r\n        type: SEND_BASE_CURRENCY,\r\n        payload: data,\r\n    };  \r\n}\r\n\r\nexport function send_selected_crypto(data){\r\n\r\n    return {\r\n        type: SEND_SELECTED_CRYPTO,\r\n        payload: data,\r\n    };  \r\n}\r\n\r\nexport function validate (x){return (dispatch, getState)=>{ \r\n    \r\n        const { selected_crypto, base_currency } = getState();\r\n        //console.log('selected crypto ',selected_crypto, 'base_currency ',base_currency);\r\n        if(selected_crypto && base_currency){console.log('validated'); \r\n            dispatch(toggle_validation_alert_visibility(false));\r\n            dispatch(set_search_results([selected_crypto.value, base_currency, selected_crypto.label]));\r\n           // console.log(x);\r\n            } \r\n        else{\r\n            //console.log('not validated');\r\n            dispatch(toggle_validation_alert_visibility(true))} \r\n        }\r\n    }\r\n    \r\n\r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function clear_search_results(){\r\n    return{type: CLEAR_SEARCH_RESULTS}\r\n}\r\n\r\nexport function send_historical(data){\r\n\r\n    return {\r\n        type: SEND_HISTORICAL,\r\n        payload: data,\r\n    };  \r\n}\r\n\r\nexport function clear_historical(){\r\n\r\n    return {\r\n        type: CLEAR_HISTORICAL, \r\n    };  \r\n}\r\n\r\n\r\nexport function send_current(data){\r\n\r\n    return {\r\n        type: SEND_CURRENT,\r\n        payload: data,\r\n    };  \r\n}\r\n\r\nexport function set_search_results(data){\r\n    return {\r\n        type: SET_SEARCH_RESULTS,\r\n        payload: data,\r\n    }; \r\n}\r\n\r\nexport function hide_loaded_coins_msg(){\r\n\r\n    return {\r\n        type: HIDE_LOADED_COINS_MSG,\r\n    };  \r\n}\r\n\r\n\r\nexport function toggle_validation_alert_visibility(data){\r\n\r\n    return {\r\n        type: TOGGLE_VALIDATION_ALERT_VISIBILITY,\r\n        payload: data,\r\n    };\r\n}","import { formatResult, getPercentChange } from \"./functions\";\r\n\r\nconst CryptoCurrencyData = class {\r\n  constructor(data) {\r\n    this.data = [data];\r\n    this.currentPrice = Object.values(data)[0];\r\n  }\r\n\r\n  complement = (newData) => {\r\n    this.data.push(...newData);\r\n  };\r\n\r\n  format = (text, referenceCoin) => {\r\n    const x = formatResult(\r\n      this.data,\r\n      text,\r\n      this.currentPrice,\r\n      getPercentChange,\r\n      referenceCoin\r\n    );\r\n    this.data = x;\r\n  };\r\n\r\n  get getData() {\r\n    return this.data;\r\n  }\r\n};\r\n\r\nexport default CryptoCurrencyData;\r\n","import * as actions from \"../ACTIONS/actions\";\r\nimport CryptoCurrencyData from \"../FUNCTIONS/CryptoCurrencyData\";\r\nimport { link, createObject } from \"../FUNCTIONS/functions\";\r\nconst initialState = {\r\n  list_of_all_cryptos: [],\r\n  isLoadedListOfAllCryptos: false,\r\n  lenghtOfListOfAllCryptos: 0,\r\n  error: null,\r\n  alert_visible: false,\r\n  alert_message: \"\",\r\n  choice: \"\",\r\n  currentCryptoName: null,\r\n  currentCryptoValue: null,\r\n  content: [],\r\n  isHistoricalDataReceived: false,\r\n  base_currency: null,\r\n  selected_crypto: null,\r\n  search_results: [],\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actions.SEND_LIST_OF_ALL_CRYPTOS:\r\n      return {\r\n        ...state,\r\n        list_of_all_cryptos: action.payload,\r\n        isLoadedListOfAllCryptos: true,\r\n        lenghtOfListOfAllCryptos: action.payload.length,\r\n      };\r\n    case actions.TOGGLE_VALIDATION_ALERT_VISIBILITY:\r\n      return {\r\n        ...state,\r\n        validation_alert_visibility: action.payload,\r\n      };\r\n\r\n    case actions.SEND_BASE_CURRENCY:\r\n      return {\r\n        ...state,\r\n        base_currency: action.payload,\r\n      };\r\n    case actions.SEND_SELECTED_CRYPTO:\r\n      return {\r\n        ...state,\r\n        selected_crypto: action.payload,\r\n      };\r\n\r\n    case actions.SET_SEARCH_RESULTS:\r\n      return {\r\n        ...state,\r\n        search_results: [...action.payload],\r\n      };\r\n\r\n    case actions.CLEAR_SEARCH_RESULTS:\r\n      return {\r\n        ...state,\r\n        search_results: null,\r\n      };\r\n\r\n    case actions.SEND_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    case actions.HIDE_LOADED_COINS_MSG:\r\n      return {\r\n        ...state,\r\n        isLoadedListOfAllCryptos: action.payload,\r\n      };\r\n    case actions.SEND_HISTORICAL:\r\n      const clear = action.payload.pop();\r\n      return {\r\n        ...state,\r\n        historical: action.payload,\r\n        clear: clear,\r\n        isHistoricalDataReceived: true,\r\n      };\r\n\r\n    case actions.CLEAR_HISTORICAL:\r\n      return {\r\n        ...state,\r\n        isHistoricalDataReceived: false,\r\n        historical: null,\r\n      };\r\n\r\n    case actions.SEND_CURRENT:\r\n      if (\r\n        state.currentCryptoValue === null ||\r\n        state.currentCryptoValue != action.payload[1]\r\n      ) {\r\n        const cryptoData = new CryptoCurrencyData(\r\n          createObject(link.currentPriceText, action.payload[1])\r\n        );\r\n\r\n        cryptoData.complement([...state.historical]);\r\n\r\n        cryptoData.format(link.currentPriceText, action.payload[0]);\r\n\r\n        const content = cryptoData.getData;\r\n        const first_content = content.shift();\r\n\r\n        return {\r\n          ...state,\r\n          currentCryptoValue: action.payload[1],\r\n          currentCryptoID: action.payload[0],\r\n          content: content,\r\n          currentCryptoName: action.payload[2],\r\n          first_content: first_content,\r\n        };\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","\r\nconst EmptyLoader = () => null;\r\nexport default EmptyLoader;","import * as React from \"react\";\nimport { lazy, Suspense } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport EmptyLoader from \"./EmptyLoader\";\n\nconst Results = lazy(() => import(\"./Results/Results\"));\nconst Error = lazy(() => import(\"./ErrorMessage\"));\nconst SearchSection = lazy(() => import(\"./Choice/SearchSection\"));\nconst Loader = lazy(() => import(\"./Loader\"));\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\">\n          <Suspense fallback={EmptyLoader()}>\n            <SearchSection />\n          </Suspense>\n        </Route>\n        <Route path=\"/results\">\n          <Suspense fallback={EmptyLoader()}>\n            <Results />\n          </Suspense>\n        </Route>\n        <Route path=\"/connecting\">\n          <Suspense fallback={EmptyLoader()}>\n            <Loader />\n          </Suspense>\n        </Route>\n        <Route path=\"/error\">\n          <Suspense fallback={EmptyLoader()}>\n            <Error />\n          </Suspense>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"react-app-polyfill/ie11\";\nimport \"react-app-polyfill/stable\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport reducer from \"./js/REDUCERS/reducer\";\nimport Axios from \"axios\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./js/serviceWorker\";\nimport \"./styles/styles.css\";\n\nexport const store = createStore(\n  reducer,\n  applyMiddleware(thunk.withExtraArgument(Axios))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n","import subMonths from 'date-fns/subMonths';\nimport getUnixTime from 'date-fns/getUnixTime';\nimport endOfYesterday from 'date-fns/endOfYesterday';\nimport startOfYear from 'date-fns/startOfYear';\nvar toPairs = require('lodash/toPairs');\n\n//źle - pokazuje jedenastą sylwestra\n\nexport const timestamps ={\ncontent:[\n  ['1D',()=> getUnixTime(endOfYesterday())],\n  ['1M',()=> getUnixTime(subMonths(new Date(), 1))],\n  ['5M',()=> getUnixTime(subMonths(new Date(), 3))],\n  ['12M',()=> getUnixTime(subMonths(new Date(), 12))],\n  ['30M',()=> getUnixTime(subMonths(new Date(), 30))],\n  ['YTD',()=> getUnixTime(startOfYear(new Date()))],\n],\nreducedLength: function(){return this.content.length -1;},\ngetValue: function(i){return (this.content[i][1])();},\ngetKey: function(i){return this.content[i][0]},\n}\n\nexport function getPercentChange (current, historical){\n\nif (arguments[0] && arguments[1] && (typeof arguments[1] === 'number') && (typeof arguments[0] === 'number')){\nlet result;\n\nlet change = 100*(current-historical)/historical;\nconst change_string = change.toLocaleString('pl-PL',{ \n    useGrouping:'true', \n    minimumFractionDigits:\"2\", \n    maximumFractionDigits:'2',\n\n  });\n \n  if (change === 0) result = 'no change';\n  else if (change > 0) result = `+${change_string}%`;\n  else if (change < 0) result = `${change_string}%`;\nreturn result;\n}\nelse return 'n/a';\n}\n\nexport const link ={\n\nextractCoinList: (obj)=>{let data = obj.data.Data; \nfor(var item in data){if (data.hasOwnProperty(item)){data[item] = (data[item]).CoinName;}}; return toPairs(data);},\ncurrentPrice:(coin, reference)=>\"https://min-api.cryptocompare.com/data/price?fsym=\"+coin+\"&tsyms=\"+reference,\nheader: { Apikey: 'feca5a4838bd3042b5340fb60de7c44aadd2d20a178514c44947c3736be3558e' },\nhistoricalPrice:(coin,reference,timestamp)=>'https://min-api.cryptocompare.com/data/dayAvg?fsym='+coin+'&tsym='+reference+'&toTs='+timestamp+'&avgType=MidHighLow&tryConversion=true&extraParams=your_app_name',\ncurrentPriceText: 'Aktualna Cena',\n}\n\nexport function formatResult(output, testValue, current, callback, referenceCoin) {\n\n  const result = output.map(element => {\n    if (Object.keys(element)[0] !== testValue) {\n      const key = Object.keys(element)[0];\n      let value = Object.values(element)[0];\n      element = createObject(key, callback(current, value));\n\n      return element;\n    } else {\n      \n      const value = current.toString()+ ' '+ referenceCoin;\n      element =createObject(testValue, value);\n      return element;\n    }\n  });\n  \n  return result;\n}\n\nexport const Counter = class {\n  constructor(){this.counter = 0;} \n  increase(){this.counter +=1 };\n  notGreater(x){return (this.counter <=x)};\n  get get(){return this.counter;}; \n  }\n\nexport function createObject  (key, value){\n  const pair ={};\n  pair[key] = value;\n  return pair;\n}\n\nexport const linkToListOfAllCryptos = 'https://min-api.cryptocompare.com/data/all/coinlist';\n\n\nexport const createOption =(ary)=>{const result = {}; result.value = ary[0];result.label = ary[1]; return result;}\n\nexport const extractListOfCryptos = (obj)=>{let data = obj.data.Data; \n  for(var item in data){if (data.hasOwnProperty(item)){data[item] = (data[item]).CoinName;}}; return toPairs(data);};\n\nexport const addCurrencySymbol = function (price, symbol){const x = (Object.values(price)[0]).toString() +\" \"+ symbol; Object.values(price)[0] = x;}\n\n\n\nexport const CryptoData = class {\n\n  constructor (data){\n  this.data = [data];\n  this.currentPrice = Object.values(data)[0];\n  }\n\n  \n  complement = (newData)=>{\n    this.data.push(...newData);\n  }\n\n  format =(text, referenceCoin)=>{ \n    const x = formatResult(\n      this.data, \n      text, \n      this.currentPrice, \n      getPercentChange, \n      referenceCoin);\n    this.data = x;\n\n    \n    }\n\n    get getData (){return this.data};\n\n}\n\nexport const EnquiryForNewerPriceResponse = class {\n\n  constructor (content){\n    this.content = content;\n   }\n\n  isValid =()=>this.content.hasOwnProperty('data') && Object.getOwnPropertyNames(this.content.data).length === 1;\n  receivedNewerPrice =(oldPrice)=>{return(oldPrice !== Object.values(this.content.data)[0])? true: false};\n  get getNewestPrice () {return Object.values(this.content.data)[0]};\n\n}"],"sourceRoot":""}